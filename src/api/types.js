// EPikminColor enum
// According to DT_PikminProperty, bean is 8
export const PikminTypes = {
    0: "PikminRed",
    1: "PikminBlue",
    2: "PikminYellow",
    3: "PikminRock",
    4: "PikminWing",
    5: "PikminPurple",
    6: "PikminWhite",
    7: "PikminIce",
    9: "PikminPhoton",
    16: "Not set (PongashiColor only)"
};

export const PikminColorEnum = {
    Red: "EPikminColor::Red",
    Yellow: "EPikminColor::Yellow",
    Blue: "EPikminColor::Blue",
    Purple: "EPikminColor::Purple",
    White: "EPikminColor::White",
    Rock: "EPikminColor::Rock",
    Wing: "EPikminColor::Wing",
    Ice: "EPikminColor::Ice",
    Bean: "EPikminColor::Bean",
    Photon: "EPikminColor::Photon",
    Undef: "EPikminColor::Undef",
    Ninjin: "EPikminColor::Ninjin",
    DrkMinion: "EPikminColor::DrkMinion"
};

export const OnionToPikminMap = {
    "OnyonCarryRed": PikminTypes[0],
    "OnyonCarryBlue": PikminTypes[1],
    "OnyonCarryYellow": PikminTypes[2],
    "OnyonCarryStone": PikminTypes[3],
    "OnyonCarryPink": PikminTypes[4],
    "OnyonCarryPurple": PikminTypes[5],
    "OnyonCarryWhite": PikminTypes[6],
    "OnyonCarryIce": PikminTypes[7],
};

export const TeamIDs = {
    A: "ETeamIdEditor::A",
    B: "ETeamIdEditor::B",
    No: "ETeamIdEditor::No"
};

export const PortalTypes = {
    2: "DungeonExit",
    3: "UpPortal",
    4: "DownPortal (cave)",
    6: "DownPortal (overworld)",
    9: "MadoriHome",
    10: "InitialPortalMove",
    12: "ExtraCavePortal"
};

export const DemoPlayParamEnter = [
    "DPP_EnterCave",
    "DPP_Challenge_EnterCave",
    "DPP_MoveCave",
    "DPPEnterCave_GasCooker"
];

export const DemoPlayParamExit = [
    "DPP_FloorCourseInCave",
    "DPP_FloorCourseInCave_Separation",
    "DPP_EscapeCave",
    "None"
];

// EPikminIdlePlayType enum
export const PikminPlayType = {
    0: "None",
    2: "Guidance",
    3: "GatherInCircle",
    // RideAndJump, RunAroundHappy and AmazeByHappySneeze are also in this enum, values unknown    
};

export const ValveWorkType = {
    2: "Once",
    6: "Build"
};

export const DropConditions = {
    NO_SALVAGE_ITEM: 5,
    SALVAGE_ITEM: 6,
    PLAYED_DEMO: 7
};

export const DropConditions_Named = {
    4: "SalvageOtakara",
    5: "NoSalvageItem",
    6: "SalvageItem",
    7: "PlayedDemo",
    0: "None"
};

export const GameRulePermissionFlags = [
    0,
    2,
    7,
    15,
    269,
    271
];
export const ActorSpawnerCustomParameter = [
    "None",
    "BasedOnSpawner",
    "ShoulderBomb",
    "ShoulderIceBomb",
    "UseSpawnerTerritory",
    "Bomb",
    "SVSleep000",
    "LFSleep003",
];

export const PikminColor = {
    Red: "red",
    Yellow: "yellow",
    Blue: "blue",
    Purple: "purple",
    White: "white",
    Rock: "rock",
    Wing: "wing",
    Ice: "ice",
    Glow: "glow",
};

export const PikminSpawnState = {
    Sprouts: "sprouts",
    Fighting: "fighting",
    Idle: "idle",
};

export const RebirthTypes = {
    NoRebirth: "ERebirthType::NoRebirth",
    AlwaysRebirth: "ERebirthType::AlwaysRebirth",
    RebirthFullExplore: "ERebirthType::RebirthFullExplore",
    RebirthLater: "ERebirthType::RebirthLater"
};

export const FreezeDropTypes = {
    TekiS: "EFreezeDropType::TekiS",
    TekiM: "EFreezeDropType::TekiM",
    TekiL: "EFreezeDropType::TekiL",
    Boss: "EFreezeDropType::Boss",
    BigBoss: "EFreezeDropType::BigBoss",
    NoDrop: "EFreezeDropType::NoDrop",
};

export const ActivityTimes = {
    Allday: "EActivityTime::Allday",
    Daytime: "EActivityTime::Daytime",
    Nighttime: "EActivityTime::Nighttime",
};

//EActorPlacementCondition
export const ActorPlacementCondition = {
    ExploreRateNotLessThen: "EActorPlacementCondition::ExploreRateNotLessThen",
    LessMaxPikminLimit: "EActorPlacementCondition::LessMaxPikminLimit",
    MoreRescuerLeafNumber: "EActorPlacementCondition::MoreRescuerLeafNumber",
    MoreRescuerNpcNumber: "EActorPlacementCondition::MoreRescuerNpcNumber",
    MoreRescuerNumber: "EActorPlacementCondition::MoreRescuerNumber",
    NightAdventurePattern: "EActorPlacementCondition::NightAdventurePattern",
    QuestClear: "EActorPlacementCondition::QuestClear",
    RescueSurvivor: "EActorPlacementCondition::RescueSurvivor",
    ResistActorGlobalId: "EActorPlacementCondition::ResistActorGlobalId",
    UnclearCaveAfterEnding: "EActorPlacementCondition::UnclearCaveAfterEnding",
    UnionPikmin: "EActorPlacementCondition::UnionPikmin",
};

//EActorPlacementAppearanceCondition
export const ActorPlacementAppearanceCondition = {
    QuestEvent: "EActorPlacementAppearanceCondition::QuestEvent",
    TimeCourse: "EActorPlacementAppearanceCondition::TimeCourse",
    WaterBoxFluctuation: "EActorPlacementAppearanceCondition::WaterBoxFluctuation"
};

export const ExploreRateTargetType = {
    Kinkai: "EExploreRateTargetType::Kinkai",
    None: "EExploreRateTargetType::None",
    Otakara: "EExploreRateTargetType::Otakara",
    OnyonCarry: "EExploreRateTargetType::OnyonCarry",
    ShizaiStation: "EExploreRateTargetType::ShizaiStation",
    ShizaiTateana: "EExploreRateTargetType::ShizaiTateana",
    Survivor: "EExploreRateTargetType::Survivor",
    SurvivorLeaf: "EExploreRateTargetType::SurvivorLeaf",
    TekiDay: "EExploreRateTargetType::TekiDay"
};

export const QueenAIType = {
    0: "None",
    1: "Born",
    3: "FallBaby"
};

export const AmbientSoundIDs = [
    "PondBig01",
    "PongBig02",
    "Swamp01",
    "Swamp02",
    "Swamp03",
    "Swamp04",
    "Swamp05",
    "Swamp06",
    "Water01",
    "Water02",
    "Water03",
    "Water04",
    "Water05",
    "Water06",
    "Water07",
    "Water1",
    "Water2",
    "Water3",
    "WaterDay01",
    "WaterDay02",
    "WaterDay03",
    "WaterDay04",
    "WaterDay05",
    "WaterDay06",
    "WaterOut01",
    "WaterOut02",
    "WaterBoxOut"
];

export const WaterBoxTextures = [
    "None",
    "T_ui_Map_Area001_WaterBox00_D",
    "T_ui_Map_Area001_WaterBox01_D",
    "T_ui_Map_HeroStory001_WaterBox00_Hero_D",
    "T_ui_Map_Area002_WaterBox00_D",
    "T_ui_Map_Area003_WaterBox00_D",
    "T_ui_Map_Area003_WaterBox00_ChangeDist_D",
    "T_ui_Map_Area003_WaterBox01_D",
    "T_ui_Map_Area003_WaterBox02_D",
    "T_ui_Map_Area003_WaterBox03_D",
    "T_ui_Map_Area003_WaterBox04_D",
    "T_ui_Map_Area003_WaterBox01_ChangeDist_D",
    "T_ui_Map_Area003_WaterBox05_D",
    "T_ui_Map_Area003_WaterBox05_ChangeDist_D",
    "T_ui_Map_Area003_WaterBox06_D",
    "T_ui_Map_Area003_WaterBox06_ChangeDist_D",
    "T_ui_Map_Area003_WaterBox07_D",
    "T_ui_Map_Area003_WaterBox07_ChangeDist_D",
    "T_ui_Map_Area003_WaterBox08_D",
    "T_ui_Map_Area003_WaterBox08_ChangeDist_D",
    "T_ui_Map_Area003_WaterBox09_D",
    "T_ui_Map_Area003_WaterBox09_ChangeDist_D",
    "T_ui_Map_Area004_WaterBox00_D",
    "T_ui_Map_Area004_WaterBox01_D",
    "T_ui_Map_Area004_WaterBox02_D",
    "T_ui_Map_Area004_WaterBox03_D",
    "T_ui_Map_Area004_WaterBox04_D",
    "T_ui_Map_Area004_WaterBox05_D",
    "T_ui_Map_Area004_WaterBox06_D",
    "T_ui_Map_Area006_WaterBox00_D",
    "T_ui_Map_Area006_WaterBox01_D",
    "T_ui_Map_Area006_WaterBox02_D",
    "T_ui_Map_Area006_WaterBox03_D",
    "T_ui_Map_Area006_WaterBox04_D",
    "T_ui_Map_Area006_WaterBox05_D",
    "T_ui_Map_Area010_WaterBox00_D",
    "T_ui_Map_Area011_WaterBox00_D",
    "T_ui_Map_HeroStory002_WaterBox00_Hero_D",
    "T_ui_Map_HeroStory002_WaterBox00_Hero_ChangeDist_D",
    "T_ui_Map_HeroStory003_WaterBox01_Hero_D",
    "T_ui_Map_HeroStory003_Hero_WaterBox01_ChangeDist_D",
    "T_ui_Map_HeroStory003_WaterBox02_Hero_D",
    "T_ui_Map_HeroStory003_Hero_WaterBox02_ChangeDist_D",
    "T_ui_Map_HeroStory003_WaterBox03_Hero_D",
    "T_ui_Map_HeroStory003_Hero_WaterBox03_ChangeDist_D",
    "T_ui_Map_HeroStory003_WaterBox00_Hero_D",
    "T_ui_Map_HeroStory003_WaterBox04_Hero_D",
    "T_ui_Map_HeroStory003_Hero_WaterBox04_ChangeDist_D",
    "T_ui_Map_HeroStory003_WaterBox05_Hero_D",
    "T_ui_Map_HeroStory003_Hero_WaterBox05_ChangeDist_D",
    "T_ui_Map_HeroStory003_WaterBox07_Hero_D",
    "T_ui_Map_HeroStory003_WaterBox06_Hero_D",
    "T_ui_Map_HeroStory003_Hero_WaterBox06_ChangeDist_D",
    "T_ui_Map_HeroStory003_WaterBox08_Hero_D",
    "T_ui_Map_HeroStory003_Hero_WaterBox08_ChangeDist_D",
    "T_ui_Map_Cave004_F00_WaterBox00_D",
    "T_ui_Map_Cave007_F00_WaterBox01_D",
    "T_ui_Map_Cave007_F00_WaterBox00_D",
    "T_ui_Map_Cave007_F01_WaterBox00_D",
    "T_ui_Map_Cave010_F01_WaterBox00_D",
    "T_ui_Map_Cave010_F03_WaterBox00_D",
    "T_ui_Map_Cave010_F05_WaterBox00_D",
    "T_ui_Map_Cave011_F00_WaterBox00_D",
    "T_ui_Map_Cave011_F01_WaterBox00_D",
    "T_ui_Map_Cave011_F02_WaterBox00_D",
    "T_ui_Map_Cave011_F03_WaterBox00_D",
    "T_ui_Map_Cave012_F01_WaterBox01_D",
    "T_ui_Map_Cave012_F01_WaterBox00_D",
    "T_ui_Map_Cave012_F01_WaterBox02_D",
    "T_ui_Map_Cave014_F00_WaterBox01_D",
    "T_ui_Map_Cave014_F00_WaterBox02_D",
    "T_ui_Map_Cave014_F00_WaterBox03_D",
    "T_ui_Map_Cave014_F00_WaterBox04_D",
    "T_ui_Map_Cave014_F00_WaterBox00_D",
    "T_ui_Map_Cave014_F01_WaterBox00_D",
    "T_ui_Map_Cave014_F01_WaterBox01_D",
    "T_ui_Map_Cave014_F02_WaterBox01_D",
    "T_ui_Map_Cave014_F02_WaterBox00_D",
    "T_ui_Map_Cave014_F03_WaterBox00_D",
    "T_ui_Map_Cave014_F03_WaterBox01_D",
    "T_ui_Map_Cave014_F03_WaterBox02_D",
    "T_ui_Map_Cave015_F00_WaterBox00_D",
    "T_ui_Map_Cave015_F00_WaterBox01_D",
    "T_ui_Map_Cave015_F00_WaterBox02_D",
    "T_ui_Map_Cave015_F00_WaterBox03_D",
    "T_ui_Map_Cave016_F07_WaterBox00_D",
    "T_ui_Map_Cave016_F08_WaterBox00_D",
    "T_ui_Map_Cave016_F09_WaterBox00_D",
    "T_ui_Map_Cave016_F10_WaterBox01_D",
    "T_ui_Map_Cave016_F10_WaterBox00_D",
    "T_ui_Map_Cave016_F14_WaterBox00_D",
    "T_ui_Map_Cave016_F14_WaterBox01_D",
    "T_ui_Map_Cave016_F18_WaterBox00_D",
    "T_ui_Map_Cave018_F00_WaterBox00_D",
    "T_ui_Map_Cave018_F01_WaterBox00_D",
    "T_ui_Map_Cave018_F02_WaterBox00_D",
    "T_ui_Map_Cave021_F00_WaterBox01_D",
    "T_ui_Map_Cave021_F00_WaterBox00_D",
    "T_ui_Map_Cave021_F01_WaterBox00_D",
    "T_ui_Map_Cave021_F02_WaterBox01_D",
    "T_ui_Map_Cave021_F02_WaterBox00_D",
    "T_ui_Map_Cave022_F02_WaterBox00_D",
    "T_ui_Map_Cave022_F02_WaterBox00_ChangeDist_D",
    "T_ui_Map_Cave030_F00_WaterBox00_D",
    "T_ui_Map_Cave031_F00_WaterBox01_D",
    "T_ui_Map_Cave031_F00_WaterBox00_D",
    "T_ui_Map_Cave032_F00_WaterBox01_D",
    "T_ui_Map_Cave032_F00_WaterBox00_D",
    "T_ui_Map_Cave033_F00_WaterBox00_D",
    "T_ui_Map_Cave034_F00_WaterBox01_D",
    "T_ui_Map_Cave034_F00_WaterBox02_D",
    "T_ui_Map_Cave034_F00_WaterBox03_D",
    "T_ui_Map_Cave034_F00_WaterBox00_D",
    "T_ui_Map_Cave035_F02_WaterBox00_D",
    "T_ui_Map_Cave035_F02_WaterBox01_D",
    "T_ui_Map_Cave035_F03_WaterBox00_D"
];

export const InterpModes = {
    0: "CIM_CurveAuto",
    1: "CIM_Linear",
    2: "CIM_Constant",
    4: "CIM_CurveUser",
};

export const RockModes = {
    0: "Normal",
    1: "ERockMode::Spline",
};

//#region UI Numbers
export const editableNumberFields = [
    "acceleration",
    "afterMaxIcePikmins",
    "attackLoopWaitSecMin",
    "attackLoopWaitSecMax",
    "attackSignSecMin",
    "attackSignSecMax",
    "attackInterval",
    "attackIntervalSuccess",
    "CondInt",
    "Life",
    "W",
    "X",
    "Y",
    "Z",
    "angle",
    "baseCampId",
    "birthDay",
    "deadDay",
    "demoID",
    "dropOption",
    "escapeSecMin",
    "escapeSecMax",
    "fallHeight",
    "flatEffectOffsetZ",
    "fightCameraChangeDistanceXY",
    "generateNum",
    "generateRadius",
    "generatorIndex",
    "giveUpDistance",
    "groupingRadius",
    "halfHeight",
    "hideTimeMin",
    "hideTimeMax",
    "inVal",
    "invasionStartTimeRatio",
    "jumpHeight",
    "leftProjectHeight",
    "lifeTire",
    "mabikiNumFromFollow",
    "maxFallDownLength",
    "maxIcePikmins",
    "minMoveSpeed",
    "maxMoveSpeed",
    "moveSpeed",
    "noSpawnRadius",
    "numDig",
    "openTime",
    "panzakuPriority",
    "pieceNum",
    "piecePutNum",
    "pitch",
    "playAnimDist",
    "pongashiChangeColorFollowNum",
    "portalNumber",
    "radius",
    "rebirthInterval",
    "refObstacleGenID",
    "roll",
    "searchAreaOtakaraCarryRadius",
    "searchBoundX",
    "searchBoundY",
    "searchBoundZ",
    "stateChangeDelayTime",
    "guruguruDist",
    "snapHeight",
    "snapRadius",
    "spawnNum",
    "spawnRadius",
    "sphereRadius",
    "spawnTimer",
    "spawnTimerAfterDemo",
    "startValidWallIndex",
    "startTargetSpeed",
    "stopQueenDistXY",
    "toPortalId",
    "unknownInt",
    "uniqueLife",
    "waitTime",
    "waterRange",
    "waterLevelChangeDist",
    "waterLevelChangeTime",
    "weight",
    "workNum",
    "yaw",
    "jumpForceXY",
    "jumpForceZ",
    "manualWorkNum",
    "ropeAng",
    "rockBallHeightMin",
    "rockBallHeightMax",
    "rockBallSpawnRadius",
    "rockBallSpawnOffsetY",
    "rockBallHeightMinInOppositeSide",
    "rockBallHeightMaxInOppositeSide",
    "rockBallSpawnRadiusInOppositeSide",
    "bornSpeed",
    "childSearchRadius",
    "fallBabySpawnRadius",
    "fallBabySpawnNum",
    "flickDistXY",
];

//#region UI Bools
export const editableBools = [
    "bAppearFixedLocation",
    "bAppearSearch",
    "bAlreadyAppear",
    "bAutoSpawnMush",
    "bCanFall",
    "bChangeCrushImpactMoveDir",
    "bCreateIcicle",
    "bDDBSurvivorLeaf",
    "bDeactivateByExit",
    "bDisableAirWall",
    "bDisableIsFlareGuard",
    "bDisableSoftEdge",
    "bDisableSink",
    "bDisappearVisibleOff",
    "bEnableChangeInitTransformAfterFalling",
    "bEnableCustomSoftEdge",
    "bEnableFreezeBothDrop",
    "bEnableOptionalPoint",
    "bFalled",
    "bFixCautionAreaCenter",
    "bInitialPortalMove",
    "bMabikiPongashi",
    "bNoBurrowType",
    "bNoChkCondWhenDead",
    "bOnceDodoroAppearDemo",
    "bOnceWakeCond",
    "bOverrideInitLocation",
    "bPatrolType",
    "bRotateDefault",
    "bReceiveCrushImpactEvent",
    "bSendCrushImpactEvent",
    "bSetCrystal",
    "bSplineWalkStart",
    "bSplineType",
    "bSprinklerOnly",
    "bStraddle",
    "bUniqueLife",
    "bUseHappyOnly",
    "bUseParentDropInfo",
    "bUseSnapHeight",
    "bUseSunMeter",
    "bWindLong",
    "bPlayDemo",
];

export const ignoreFields = [
    "drops",
    "type",
    "infoType",
    "ddId",
    "outlineFolderPath",
    "spareBytes",
    "generatorVersion"
];

//#region UI Strings
export const editableStrings = [
    "canAttackLevelFaceMessageName",
    "CIDList",
    "CondName",
    "CondPikminColor",
    "boneName",
    "demoBindName",
    "hideAreaTag",
    "ignoreList",
    "linkNarrowSpaceBoxID",
    "linkWarpTriggerID",
    "navMeshTriggerID",
    "npcInfoKey",
    "routeTag",
    "searchDistance?",
    "searchTagName",
    "splineRoutePathTag",
    "subSplineRoutePathTag",
    "switchID",
    "toLevelName",
    "toSubLevelName",
    "valveID",
    "warpID",
    "waterBoxId",
    "waterBoxSwitchId",
];

export const arrayStrings = [
    "ignoreList",
    "CIDList"
];

export const selectFields = {
    pongashiChangeColorFromFollow: Object.values(PikminTypes),
    pikminType: Object.values(PikminTypes),
    colour: Object.values(PikminTypes),
    groupIdlingType: Object.values(PikminPlayType),
    rebirthType: Object.values(RebirthTypes),
    portalType: Object.values(PortalTypes),
    demoPlayParamEnter: DemoPlayParamEnter,
    demoPlayParamExit: DemoPlayParamExit,
    workType: Object.values(ValveWorkType),
    activityTime: Object.values(ActivityTimes),
    Condition: Object.values(ActorPlacementCondition),
    exploreRateType: Object.values(ExploreRateTargetType),
    radarMapWBTexture: WaterBoxTextures,
    radarMapWBChangeDistTexture: WaterBoxTextures,
    ambientSoundId: AmbientSoundIDs,
    interpMode: Object.values(InterpModes),
    rockMode: Object.values(RockModes),
    queenAIType: Object.values(QueenAIType)
};

export const NightMaps = {
    Area001: [
        "Night001-1",
        "Night001-2",
        "Night001-3",
    ],
    Area002: [
        "Night002-1",
        "Night002-2",
        "Night002-3",
    ],
    Area003: [
        "Night003-1",
        "Night003-2",
        "Night003-3",
    ],
    Area004: [
        "Night004-1",
        "Night004-2"
    ],
    Area006: [
        "Night006-1",
        "Night006-2"
    ],
    Area010: [
        "Night010-1",
        "Night010-2",
        "Night010-3"
    ]
};

//#region InfoTypes
export const InfoType = {
    Treasure: "treasure",
    Creature: "creature",
    Onion: "onion",
    Pikmin: "pikmin",
    Hazard: "hazard",
    Water: "water",
    Night: "night",
    Gimmick: "gimmick",
    Object: "object",
    WorkObject: "workobject",
    Pikmin: "pikmin",
    Base: "base",
    Onion: "onion",
    Hazard: "hazard",
    Portal: "portal",
    Item: "item",
    WaterWater: "water-water",
    WaterSwamp: "water-swamp",
};

export const isTreasure = (marker) => {
    return marker.infoType === InfoType.Treasure;
};

export const isCreature = (marker) => {
    return marker.infoType === InfoType.Creature;
};

export const isGimmick = (marker) => {
    return marker.infoType === InfoType.Gimmick;
};

export const Legends = [
    InfoType.Creature,
    InfoType.Treasure,
    InfoType.Gimmick,
    InfoType.Object,
    InfoType.WorkObject,
    InfoType.Pikmin,
    InfoType.Base,
    InfoType.Onion,
    InfoType.Hazard,
    InfoType.Portal,
    InfoType.Item
];

export const Categories = [
    {
        label: "Creatures",
        markers: [
            InfoType.Creature
        ]
    },
    {
        label: "Treasure",
        markers: [
            InfoType.Treasure
        ]
    },
    {
        label: "Objects",
        markers: [
            InfoType.Object,
            InfoType.WorkObject
        ]
    },
    {
        label: "Gimmicks",
        markers: [
            InfoType.Gimmick
        ]
    },
    {
        label: "Hazards",
        markers: [
            InfoType.Hazard
        ]
    },
    {
        label: "Portals",
        markers: [
            InfoType.Portal
        ]
    },
    {
        label: "Onions",
        markers: [
            InfoType.Onion
        ]
    },
    {
        label: "Base",
        markers: [
            InfoType.Base
        ]
    },
    {
        label: "Pikmin",
        markers: [
            InfoType.Pikmin
        ]
    },
    {
        label: "Items",
        markers: [
            InfoType.Item
        ]
    }
];

//#region Defaults
export const exposedGenVars = ["AttackAffordance", "AI", "CarrotMove", "Life", "PointerAssist", "CarryAffordance"];

export const DefaultDrop = {
    id: 1,
    bRegistGenerator: 0,
    dropChance: 1,
    dropCondition: 0,
    gameRulePermissionFlag: 0,
    flags: [1, 8, 16, 64],
    customFloatParam: 0.0,
    bSetTerritory: false,
    maxDrops: 1,
    minDrops: 1,
    assetName: "/Game/Carrot4/Placeables/Teki/GKochappy.GKochappy_C"
};

export const defaultVector = {
    X: 0.0,
    Y: 0.0,
    Z: 0.0
};

export const DefaultActorSpawnerDrop = {
    assetName: "/Game/Carrot4/Placeables/Teki/GKochappy.GKochappy_C",
    bGenseiControl: 0,
    halfHeight: 100,
    infiniteSpawn: 0,
    avatar: 1,
    pikmin: 1,
    avatarAndPikmin: 1,
    carry: 1,
    bNotOverlap: 1,
    noDropItem: 0,
    overlapCenterX: 0,
    overlapCenterY: 0,
    overlapCenterZ: 0,
    radius: 350,
    angle: 180,
    sphereRadius: 500,
    randomRotation: 0,
    spareBytes: [5, 0, 0, 0, 78, 111, 110, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63],
    spawnInterval: 1,
    spawnLimit: 10,
    spawnLocationX: 0,
    spawnLocationY: 0,
    spawnLocationZ: 0,
    customParameter: "None",
    fallStart: 0,
    spawnAng: 0.0,
    spawnVelX: 0.0,
    spawnVelY: 0.0,
    customFloatParameter: 0.0,
    bSetTerritory: 0.0,
    invasionStartTimeRatio: 0.0
};

export const DefaultPortalTrigger = {
    portalType: PortalTypes[6],
    portalNumber: 0,
    toLevelName: "Cave001_F00",
    toSubLevelName: "None",
    toPortalId: 0,
    demoPlayParamEnter: DemoPlayParamEnter[0],
    demoPlayParamExit: DemoPlayParamExit[0],
    toBaseCampId: -1,
    bInitialPortalMove: false,
    bDeactivateByExit: false,
    playAnimDist: 300,
    panzakuPriority: 0,
    disablePikminFlags: Object.fromEntries(Array.from({ length: 16 }, (_, i) => [i, false])),
    bDisableIsFlareGuard: false,
};

// used for constructing, and displaying swaps to NoraSpawner
// fix that and split them up later, between a superset for construction and the NS defaults
export const defaultAIProperties = {
    spawnNum: 1,
    spawnRadius: 50,
    noSpawnRadius: 35,
    pikminType: PikminTypes[0],
    mabikiNumFromFollow: 50,
    bMabikiPongashi: true,
    pongashiChangeColorFollowNum: -1,
    pongashiChangeColorFromFollow: PikminTypes[0],
    noraIdlingPreset: "NoraDefault01",
    groupIdlingType: PikminPlayType[2],
    mabikiPongashiOffset: {
        X: 0.0,
        Y: 0.0,
        Z: 0.0
    }
};

export const defaultTreasureAI = {
    bChangeCrushImpactMoveDir: false,
    bReceiveCrushImpactEvent: false,
    bSendCrushImpactEvent: false,
    crushImpactMoveRot: defaultVector,
    bDDBSurvivorLeaf: false,
    bEnableOptionalPoint: false,
    optionalPointOffsets: [],
    optionalPointPriorityInfoSize: 0,
    bCanFall: false,
    bEnableChangeInitTransformAfterFalling: false,
    rotation: {
        ...defaultVector,
        W: 1
    },
    translation: defaultVector
};

export const defaultCreatureAI = {
    territory: {
        ...defaultVector,
        halfHeight: 300.0,
        radius: 350.0
    },
    boneName: "None",
    localOffset: {
        X: 0.0,
        Y: 0.0,
        Z: 0.0
    },
    vel: {
        X: 0.0,
        Y: 0.0,
        Z: 0.0
    },
    randVel: {
        X: 0.0,
        Y: 0.0,
        Z: 0.0
    },
    dropOption: 6,
    bOverrideInitLocation: false,
    overrideInitLocation: {
        X: 0.0,
        Y: 0.0,
        Z: 0.0
    },
    bEnableFreezeBothDrop: false,
    searchAreaOtakaraCarryRadius: 1000.0,
    invasionStartTimeRatio: 0.0,
    bEnableOptionalPoint: false,
    optionalPointOffsets: [{
        X: 0.0,
        Y: 0.0,
        Z: 0.0
    }],
};

export const defaultTriggerAI = {
    switchID: "switch00",
    CIDList: "[]"
};

export const defaultSprinklerAI = {
    navMeshTriggerID: "NavMeshTrigger00",
    valveID: "valve0",
    waterRange: 365,
    openTime: 10,
    flatEffectOffsetZ: -30,
    bSprinklerOnly: false
};

export const defaultValveAI = {
    valveID: "valve0",
    workType: ValveWorkType[6],
    demoID: 0,
    piecePutNum: 4
};

export const defaultBaseAIProperties = {
    baseCampId: 1,
    bDeactivateByExit: false,
    safeRadius: 150,
    safeAreaOffsetX: 0,
    safeAreaOffsetY: 0,
    safeAreaOffsetZ: 0,
    searchBoundX: 0.0,
    searchBoundY: 0.0,
    searchBoundZ: 0.0,
    stateChangeDelayTime: 0.699999988079071,
    guruguruDist: 0,
    CIDList: ["Enemy"]
};

export const defaultPlacementCond = {
    Condition: ActorPlacementCondition.ExploreRateNotLessThen,
    CondInt: 0,
    CondName: "None",
    CondPikminColor: "EPikminColor::Undef"
};

export const defaultAppearanceCond = {
    Condition: ActorPlacementAppearanceCondition.QuestEvent,
    CondInt: 0,
    CondName: "None",
};

export const defaultSplinePoint = {
    inVal: 0.0,
    outVal: {
        X: 0.0,
        Y: 0.0,
        Z: 0.0
    },
    arriveTangent: {
        X: 0.0,
        Y: 0.0,
        Z: 0.0
    },
    leaveTangent: {
        X: 0.0,
        Y: 0.0,
        Z: 0.0
    },
    rotation: {
        roll: 0.0,
        pitch: 0.0,
        yaw: 0.0
    },
    scale: {
        X: 1.0,
        Y: 1.0,
        Z: 1.0
    },
    interpMode: InterpModes[0]
};

export const TriggerDoorAIBytes = [13, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 87, 195, 0, 128, 110, 68, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 122, 68, 0, 0, 122, 68, 0, 0, 72, 67];
export const ValveAPBytes = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 78, 111, 110, 101, 0, 5, 0, 0, 0, 78, 111, 110, 101, 0, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 128, 191, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 128, 191];
// Does not contain the mystery extra 4 bytes
export const ObjectAIParameter = [0, 0, 0, 0, 255, 255, 255, 255, 5, 0, 0, 0, 78, 111, 110, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 66, 0, 128, 187, 67, 0, 0, 0, 0, 0, 0, 112, 65, 0, 0, 240, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 78, 111, 110, 101, 0, 5, 0, 0, 0, 78, 111, 110, 101, 0, 5, 0, 0, 0, 78, 111, 110, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

//#region Creature Names
export const CreatureNames = {
    ActorSpawner: "Actor Spawner",
    AmeBozu: "Waterwraith",
    Amembo: "Skeeterskate",
    Arikui: "Whiptongue Bulborb",
    Awadako: "Waddlepus",
    Baby: "Bulborb Larva",
    BabyCrow: "Downy Snagret",
    BigChappy: "Jumbo Bulborb",
    BigFireTank: "Titan Blowhog",
    BigFrog: "Masterhop",
    BigEgg: "Big Egg",
    BigIceTank: "Titan Blizzarding Blowhog",
    BigKingChappy: "Sovereign Bulblax",
    BigUjinko: "Mama Sheargrub",
    BikkuriGiku: "Creeping Chrysanthemum",
    BikkuriKinoko: "Startle Spore",
    Billy: "Bearded Amprat",
    BokeNameko: "Puffstool",
    BossInu2: "Ancient Sirehound",
    Chappy: "Red Bulborb",
    Chaser: "Moss",
    DamagumoCannon: "Man-At-Legs",
    Demejako: "Bug-Eyed Crawmad",
    DiscoDamagumo: "Groovy Long Legs",
    Dodoro: "Smoky Progg",
    DodoroEgg: "Smoky Progg",
    DokuNameko: "Toxstool",
    Dorombo: "Muckerskate",
    Egg: "Egg",
    ElecMushi: "Anode Beetle",
    ElecOtakara: "Anode Dweevil",
    ElecSenbei: "Shockcake",
    FireChappy: "Fiery Bulblax",
    FireOtakara: "Fiery Dweevil",
    FireTank: "Fiery Blowhog",
    Frog: "Yellow Wollyhop",
    Futakuchi: "Armored Cannon Larva",
    FutakuchiAdult: "Horned Cannon Beetle",
    GasKogane: "Doodlebug",
    GasOtakara: "Venom Dweevil",
    GroupDropManager: "GroupDropManager",
    HageDamagumo: "Baldy Long Legs",
    Hambo: "Skitter Leaf",
    Hanachirashi: "Withering Blowhog",
    Hari: "Porquillion",
    Hariuo: "Pricklepuff",
    IceChappy: "Frosty Bulborb",
    IceFrog: "Chillyhop",
    IceKochappy: "Frosty Dwarf Bulborb",
    IceMar: "Icy Blowhog",
    IceOtakara: "Iceblown Dweevil",
    IceSenbei: "Freezecake",
    IceTank: "Snowy Blowhog",
    Iwakko: "Skutterchuck",
    Kaburi: "Joustmite",
    Kajiokoshi: "Pyroclasmic Slooch",
    Kanitama: "Peckish Aristocrab",
    KareHambo: "Desiccated Skitter Leaf",
    Kemekuji: "Toady Bloyster",
    KingChappy: "Emperor Bulblax",
    KinoKajiokoshi: "Moldy Slooch",
    KinoKochappy: "Moldy Dwarf Bulborb",
    Kochappy: "Dwarf Red Bulborb",
    Kogane: "Iridescent Flint Beetle",
    Kogani: "Aristocrab Offspring",
    KumaChappy: "Spotty Bulbear",
    KumaKochappy: "Dwarf Bulbear",
    Kurage: "Lesser Spotted Jellyfloat",
    Kurione: "Honeywisp",
    Mar: "Puffy Blowhog",
    MarigumoNet: "Arachnode (+Net?)",
    MarigumoNet_Low: "Arachnode (+Low net?)",
    MaroFrog: "Wollyhop",
    MiniMochi: "Sunsquish",
    MitsuMochi: "Foolix",
    Miulin: "Mamuta",
    Namazu: "Water Dumple",
    NightBaby: "Bulborb Larva (Night)",
    NightChappy: "Red Bulborb (Night)",
    NightFireChappy: "Fiery Bulblax (Night)",
    NightFrog: "Yellow Wollyhop (Night)",
    NightKaburi: "Joustmite (Night)",
    NightKareHambo: "Dessicated Skitterleaf (Night)",
    NightKochappy: "Dwarf Bulborb (Night)",
    NightMar: "Puffy Blowhog (Night)",
    NightTobiKaburi: "Flying Joustmite (Night)",
    NightTobinko: "Shearwig (Night)",
    NiseBoss: "Gildemander",
    NiseZako: "Gildemandwee",
    Nomi: "Shearflea",
    NumaSuitori: "Bogswallow",
    OoKogane: "Iridescent Glint Beetle",
    OoKurage: "Greater Spotted Jellyfloat",
    OoPanModoki: "Giant Breadbug",
    Otama: "Wolpole",
    PanModoki: "Breadbug",
    PanModokiHideArea: "Breadbug Nest",
    Patroller: "Bloomcap Bloyster",
    PikminYellow: "Yellow Pikmin",
    PikminRed: "Red Pikmin",
    PikminBlue: "Blue Pikmin",
    PikminRock: "Rock Pikmin",
    PikminWing: "Wing Pikmin",
    PikminPurple: "Purple Pikmin",
    PikminWhite: "White Pikmin",
    PikminPhoton: "Glow Pikmin",
    PikminIce: "Ice Pikmin",
    Queen: "Empress Bulblax",
    RedShijimi: "Red Spectralids",
    Rusher: "Tusked Blowhog",
    Sakadachi: "Crusted Rumpup",
    Sarai: "Swooping Snitchbug",
    Shako: "Hermit Crawmad",
    Shippo: "Mammoth Snootwhacker",
    ShippoZako: "Miniature Snootwhacker",
    SnakeCrow: "Burrowing Snagret",
    SplineDodoro: 'Smoky Progg Spline',
    SplineFutakuchiRock: 'Cannon Beetle Larva Rock Spline',
    SplineKumaChappy: 'Bulbear Spline',
    SplinePatroller: 'Bloomcap Bloyster Spline',
    SplineHageDamagumo: 'Baldy Long Legs Spline',
    SplineDamagumoCanStep: 'Long Legs Spline?',
    SplineChaser_Kitchen: 'Moss Kitchen Spline',
    SplineChaser_LivingRoom: 'Moss Living Room Spline',
    SplineBaby: 'Bulborb Larva Spline',
    SplineAmeBozu: 'Waterwraith Spline',
    SplineNightKochappy: 'Dwarf Bulborb Spline (Night)',
    SplineDokuNameko: 'Toxstool Spline',
    SplineFutakuchiAdultRock: 'Cannon Beetle Rock Spline',
    SplinePanModoki: 'Breadbug Spline',
    SplineBigUjinko: 'Mama Sheargrub Spline',
    Suitori: "Waddlequaff",
    TamagoMushi: "Mitite",
    TenKochappy: "Orange Dwarf Bulborb",
    TentenChappy: "Orange Bulborb",
    ThrowEater: "Grubchucker",
    TobiKaburi: "Flighty Joustmite",
    Tobinko: "Shearwig",
    Tobiuo: "Puckering Blinnow",
    UjinkoA: "Female Sheargrub",
    UjinkoB: "Male Sheargrub",
    WaterOtakara: "Hydro Dweevil",
    WaterTank: "Watery Blowhog",
    WhiteShijimi: "White Spectralids",
    YakiSenbei: "Scorchcake",
    Yamashinju: "Pearly Clamcamp",
    YellowShijimi: "Yellow Spectralids",
    YukiFutakuchi: "Arctic Cannon Larva",
    YukiFutakuchiAdult: "Arctic Cannon Beetle",
    Yukimushi: "Snowfake Fluttertail",
    BossInuPoisonArea: "(ActorSpawner drop) funny gloom pool",
    IceFrogIce: "(ActorSpawner drop) IceFrog pool",
};

//#region Treasure Names
export const TreasureNames = {
    Ota3DMegane: "Dimension Converter",
    OtaAmmolite: "Newtolite Shell",
    OtaApricot: "Searing Acidshock",
    OtaAvocado: "Scaly Custard",
    OtaBanana: "Slapstick Crescent",
    OtaBankCardA: "Courage Emblem",
    OtaBankCardB: "Power Emblem",
    OtaBankCardBlank: "Deity's Portrait",
    OtaBankCardBlank2: "Devil's Portrait",
    OtaBankCardC: "Wisdom Emblem",
    OtaBankCardD: "Love Emblem",
    OtaBankCardE: "Money Emblem",
    OtaBankCardF: "Work Emblem",
    OtaBilliardBall1: "Sphere of Desire",
    OtaBilliardBall2: "Sphere of Family",
    OtaBilliardBall3: "Sphere of Heart",
    OtaBilliardBall4: "Sphere of Beginnings",
    OtaBilliardBall5: "Sphere of Vitality",
    OtaBilliardBall6: "Sphere of Calm",
    OtaBilliardBall7: "Sphere of Good Fortune",
    OtaBilliardBall8: "Sphere of Trust",
    OtaBilliardBall9: "Sphere of Support",
    OtaBilliardBallCue: "Sphere of Truth",
    OtaBiwa: "Velvety Dreamdrop",
    OtaBoardEraser: "Dusty Bed",
    OtaBoat: "Unfloatable Boat",
    OtaBottle: "Maternal Sculpture",
    OtaBrushA: "Brush of Wisdom",
    OtaBrushB: "Brush of Foolishness",
    OtaButtonMetal: "Trap Lid",
    OtaButtonPlastic: "Fastening Item",
    OtaButtonWood: "Perforated Raft",
    OtaCandle: "Olfactory Sculpture",
    OtaCandyStick: "Sweet Stumble-Not",
    OtaCardDentaku: "Solar-Powered Computing Machine",
    OtaCasinoChip1: "Disk of Joyous Wisdom",
    OtaCasinoChip10: "Disk of Angry Wisdom",
    OtaCasinoChip100: "Disk of Surprising Wisdom",
    OtaCasinoChip25: "Disk of Sorrowful Wisdom",
    OtaCasinoChip50: "Disk of Amusing Wisdom",
    OtaCastanets: "Harmonic Synthesizer",
    OtaCherry: "Cupid's Grenade",
    OtaCollar: "Gift of Friendship",
    OtaCompass: "Director of Destiny",
    OtaCounter: "Internal-Clock Measurer",
    OtaCroissant: "Flaky Temptation",
    OtaDarts: "Relentless Spear",
    OtaDaruma: "Persistence Machine",
    OtaDekopon: "Pocked Airhead",
    OtaDentaku: "Number Jumper",
    OtaDice12: "Long-Shot Totem",
    OtaDice20: "Go-with-the-Flow Totem",
    OtaDice4Sided: "Difficult-Choice Totem",
    OtaDice6WHT: "Chance Totem",
    OtaDisc: "Glinty Circular Disc",
    OtaDoguHead: "Ancient Statue Head",
    OtaDragonFruit: "Fire-Breathing Feast",
    OtaDuckL: "Universal Rubber Cutie",
    OtaDuckM: "Planetary Rubber Cutie",
    OtaDuckS: "Stately Rubber Cutie",
    OtaEclair: "Sweet Torrent",
    OtaEffectsUnit: "Soul Reverberator",
    OtaEggplant: "Foolish Fruit",
    OtaEngageRing: "Unbreakable Promise",
    OtaFeeddish: "Bathing Pool",
    OtaFieldGlass: "Double Dragon-Eyed Scope",
    OtaFingerBoard: "Personal-Injury Plank",
    OtaFishCruet: "Mystery Squish Fish",
    OtaFruitsPickBLU: "Ice Sword",
    OtaFruitsPickGRN: "Spirit Sword",
    OtaFruitsPickORN: "Heroic Sword",
    OtaFruitsPickPNK: "Heart Sword",
    OtaFruitsPickYEL: "Bright Sword",
    OtaGamaguchi: "Greed-Inducement Device",
    OtaGaragara: "Shake-a-Smile",
    OtaGBARomBLK: "Spinning Memories Plank",
    OtaGBARomYEL: "Masterpiece Plank",
    OtaGBASP: "Stone of Advancement",
    OtaGBMicroFC: "Micromanagement Station",
    OtaGCConWb: "Winged Freedom Sculpture",
    OtaGoddess: "Lamp of Inspiration",
    OtaGoldBar: "Golden Vaulting Table",
    OtaGoldfish: "Faux Fishy",
    OtaGolfBall: "Orbital Communication Sphere",
    OtaGrape: "Dusk Pustules",
    OtaGrapefruit: "Astringent Clump",
    OtaGripper: "Tandem Trainer",
    OtaHairPin: "Floral Instigator",
    OtaHam: "King of Meats",
    OtaHanafudaA: "Talisman of Life (Crane)",
    OtaHanafudaB: "Talisman of Life (Cherry Blossom)",
    OtaHanafudaC: "Talisman of Life (Moon)",
    OtaHanafudaD: "Talisman of Life (Rain)",
    OtaHanafudaE: "Talisman of Life (Phoenix)",
    OtaHandbell: "Time Marker",
    OtaHandSpinner: "Space Spinner",
    OtaHardBall: "Orb of Destruction",
    OtaHarmonica: "Wind Detector",
    OtaHeroPartsA: "Whimsical Radar",
    OtaHeroPartsAA: "Automatic Gear",
    OtaHeroPartsAB: "Automatic Gear",
    OtaHeroPartsAC: "Secret Safe",
    OtaHeroPartsAD: "Pilot's Seat",
    OtaHeroPartsB: "Ionium Jet",
    OtaHeroPartsC: "Ionium Jet",
    OtaHeroPartsD: "Radiation Canopy",
    OtaHeroPartsE: "Sagittarius",
    OtaHeroPartsF: "Libra",
    OtaHeroPartsG: "Chronos Reactor",
    OtaHeroPartsH: "Geiger Counter",
    OtaHeroPartsI: "Bowsprit",
    OtaHeroPartsJ: "Omega Stabilizer",
    OtaHeroPartsK: "Repair-Type Bolt",
    OtaHeroPartsL: "Repair-Type Bolt",
    OtaHeroPartsM: "Repair-Type Bolt",
    OtaHeroPartsN: "Repair-Type Bolt",
    OtaHeroPartsO: "Nova Blaster",
    OtaHeroPartsP: "Interstellar Radio",
    OtaHeroPartsQ: "Extraordinary Bolt",
    OtaHeroPartsR: "Extraordinary Bolt",
    OtaHeroPartsS: "Extraordinary Bolt",
    OtaHeroPartsT: "Extraordinary Bolt",
    OtaHeroPartsU: "Extraordinary Bolt",
    OtaHeroPartsV: "Extraordinary Bolt",
    OtaHeroPartsW: "Automatic Gear",
    OtaHeroPartsX: "Automatic Gear",
    OtaHeroPartsY: "Automatic Gear",
    OtaHeroPartsZ: "Automatic Gear",
    OtaHimeFork: "Noble Bident",
    OtaHornBell: "Path Creator",
    OtaIcePick: "Shattering Lance",
    OtaIchigo: "Sunseed Berry",
    OtaIchijiku: "Delectable Bouquet",
    OtaIsobeyaki: "Deceptive Snack",
    OtaJamIchigo: "Condensed Sunshine",
    OtaJoyConL: "Telekinesis Detector",
    OtaJoyConR: "Connection Detector",
    OtaKaki: "Portable Sunset",
    OtaKendamaA: "Aspiration-Ritual Ball",
    OtaKendamaB: "Aspiration-Ritual Pole",
    OtaKiwi: "Disguised Delicacy",
    OtaKiwiGLD: "Blonde Impostor",
    OtaKushiyaki: "The Four Grill Brothers",
    OtaLaFrance: "Tremendous Sniffer",
    OtaLemon: "Face Wrinkler",
    OtaLightUpRingBLU: "Hoop of Healing",
    OtaLightUpRingRED: "Hoop of Passion",
    OtaLightUpRingYEL: "Hoop of Fortune",
    OtaLime: "Zest Bomb",
    OtaLoupe: "Detective's Truth Seeker",
    OtaMacaronA: "S.S. Berry",
    OtaMacaronB: "S.S. Peppermint",
    OtaMacaronC: "S.S. Chocolate",
    OtaManekiNeko: "Beckoning Mannequin",
    OtaMango: "Heroine's Tear",
    OtaMangosteen: "Dapper Blob",
    OtaMask: "Expression Hider",
    OtaMatDollLA: "Mama Doll Head",
    OtaMatDollLB: "Empty Vase",
    OtaMatDollMA: "Daughter Doll Head",
    OtaMatDollMB: "Mooching Vase",
    OtaMatDollSA: "Granddaughter Doll Head",
    OtaMatDollSB: "Gifting Vase",
    OtaMelon: "Wayward Moon",
    OtaMikan: "Citrus Lump",
    OtaMoai: "Giant's Fossil",
    OtaMuscat: "Dawn Pustules",
    OtaMusicBoxA: "Mechanical Harp (Memory Song)",
    OtaMusicBoxB: "Mechanical Harp (Lullabies)",
    OtaMusicBoxC: "Mechanical Harp (Windmills)",
    OtaNashi: "Crunchy Deluge",
    OtaNESClassicMini: "Life Controller",
    OtaOcarinaBRN: "Ambiguous Hostel",
    OtaOshaburiBLU: "False Lollipop",
    OtaPadlock: "Secured Satchel",
    OtaPaintsAQU: "Refreshing Goo",
    OtaPaintsBLK: "Ambiguous Goo",
    OtaPaintsBLU: "Decorative Goo",
    OtaPaintsGRN: "Neon Goo",
    OtaPaintsPNK: "Captivation Goo",
    OtaPaintsPPL: "Noble Goo",
    OtaPaintsRED: "Uniquely You Goo",
    OtaPaintsWHT: "True Goo",
    OtaPaintsYEL: "Illumination Goo",
    OtaPapaya: "Seed Hive",
    OtaPaperballoon: "Divine Balloon",
    OtaPaperCraneBLU: "Sweat-Soaked Blue Bird",
    OtaPaperCraneGLD: "Priceless Bird",
    OtaPaperCraneRED: "Skin of the Phoenix",
    OtaPeach: "Mock Bottom",
    OtaPeanut: "Snack Bean",
    OtaPhotoframe: "Buddy Display",
    OtaPinBadgeA: "Blast Shield",
    OtaPinBadgeB: "Ring-of-Return Shield",
    OtaPinBadgeC: "Satellite Shield",
    OtaPinBadgeD: "Heroic Shield",
    OtaPinBadgeE: "Shooting-Star Shield",
    OtaPlum: "Lesser Mock Bottom",
    OtaPocketWatch: "Temporal Mechanism",
    OtaPotato: "Child of the Earth",
    OtaPretzel: "Puzzle Snack",
    OtaPudding: "Jiggle-Jiggle",
    OtaPumpkin: "Mysterious Carriage",
    OtaPuzzleA: "Memory Fragment (Top Left)",
    OtaPuzzleB: "Memory Fragment (Top-ish)",
    OtaPuzzleC: "Memory Fragment (Top...Probably?)",
    OtaPuzzleD: "Memory Fragment (Top Right)",
    OtaPuzzleE: "Memory Fragment (Left Edge)",
    OtaPuzzleF: "Memory Fragment (Center Left)",
    OtaPuzzleG: "Memory Fragment (Center Right)",
    OtaPuzzleH: "Memory Fragment (Right Edge)",
    OtaPuzzleI: "Memory Fragment (Bottom Left)",
    OtaPuzzleJ: "Memory Fragment (Bottom-ish)",
    OtaPuzzleK: "Memory Fragment (Bottom...Probably?)",
    OtaPuzzleL: "Memory Fragment (Bottom Right)",
    OtaRailwayLineA: "Life Station",
    OtaRailwayLineB: "Straight-and-Narrow Track",
    OtaRailwayLineC: "Turn-of-Events Track",
    OtaRailwayLineD: "Back-at-the-Beginning Track",
    OtaRailwayLineE: "Thrill-Ride Track",
    OtaRappa: "Mega Horn",
    OtaRaspberry: "Juicy Gaggle",
    OtaRingo: "Insect Condo",
    OtaRingPop: "Sticky Jewel",
    OtaRoboBody: "Nexus Combobot",
    OtaRoboHandL: "Peacemaker Combobot",
    OtaRoboHandR: "Fist-Force Combobot",
    OtaRoboHead: "Think-Tank Combobot",
    OtaRoboLegL: "Sure-Footed Combobot",
    OtaRoboLegR: "Kick-Start Combobot",
    OtaRodan: "Contemplation Station",
    OtaSFCMouse: "Creativity Conduit",
    OtaShinjitsu: "Mouth of Lies",
    OtaShutterGlasses: "Don't-See-It Specs",
    OtaSmallBell: "Spouse Alert",
    OtaSpeaker: "Amplified Amplifier",
    OtaSpongeA: "Doggy Bed",
    OtaSpongeB: "Birdy Bed",
    OtaSpongeC: "Fishy Bed",
    OtaSqueezer: "Merciless Extractor",
    OtaStarFruit: "Stellar Extrusion",
    OtaSushiEbi: "Fish-Bed Snack",
    OtaSushiMaguro: "Maestro of Flavor",
    OtaSushiTamago: "Belted Delicacy",
    OtaSweetPotato: "Daughter of the Earth",
    OtaTakenoko: "Anxious Sprout",
    OtaTakoWiener: "Octoplus",
    OtaTennisBall: "Sphere of Fuzzy Feelings",
    OtaThermometer: "Heat Sensor",
    OtaTomatoM: "Love Nugget",
    OtaTomatoS: "Crush Nugget",
    OtaToothModel: "Monster Teeth",
    OtaTrainA: "Unlimited Locomotive",
    OtaTrainB: "Middle-Management Tank Car",
    OtaTrainC: "Leisure Car",
    OtaTrilobite: "Slipper-Bug Fossil",
    OtaVenus: "Unfinished Statue",
    OtaWaffle: "Cushion Cake",
    OtaWaterMelon: "Crimson Banquet",
    OtaWhistle: "Emperor Whistle",
    OtaYamashinju: "Princess Pearl",
    OtaYoshiCookieA: "Cookie of Nibbled Circles",
    OtaYoshiCookieB: "Cookie of Prosperity",
    OtaYoshiCookieC: "Vanishing Cookie",
    OtaYoshiCookieD: "Love's Fortune Cookie",
    OtaYoshiCookieE: "Hearty Container",
    OtaZucchini: "Crew-Cut Gourd"
};


export const ItemNames = {
    Bomb: "Bomb Rock",
    IceBomb: "Ice Blast",
    Honey: "Nectar",
    HomingBomb: "Trackonator",
    SearchBomb: "Mine",
    YuudouEsa: "PikPik Carrot",
    DogFood: "Scrummy Bone",
    PhotonBall: "Glow Seed",
    ShugoFlag: "Idler's Alert",
    HotExtract: "Ultra-Spicy Spray",
    RockBall: "Rock",
    HoneyLevelPlacement: "HoneyLevelPlacement"
};

export const BaseNames = {
    OnyonCamp: "Onion Camp",
    OnyonCamp01: "Onion Camp 1",
    OnyonCamp02: "Onion Camp 2",
    OnyonCamp03: "Onion Camp 3",
    OnyonCamp04: "Onion Camp 4",
    OnyonCampSimple: "Simple Onion Camp (?)",
    OnyonCampDummy: "Dummy Onion Camp",
    PodCamp: "Pod Camp",
    PodCamp01: "Pod Camp 1",
    PodCamp02: "Pod Camp 2",
    PodCamp03: "Pod Camp 3",
    PodCamp04: "Pod Camp 4",
    PodCampCave00: "Cave Pod Camp",
    PodCampCave01: "Cave Pod Camp 1",
    PodCampCave02: "Cave Pod Camp 2",
    PodCampCave03: "Cave Pod Camp 3",
    PodCampSimple: "Simple Pod Camp",
    PodCampDummy: "Dummy Pod Camp"
};

//#region Gimmick Names
export const GimmickNames = {
    AirWallBox: 'AirWallBox',
    AirWallFlick: 'AirWallFlick',
    AirWallTerrain: 'AirWallTerrain',
    Bank: 'Bank',
    BookendSlope: "BookendSlope",
    BookendPlane: "BookendPlane",
    Branch_Long: 'Long Branch',
    Burning: 'Straw',
    Circulator: 'Fan',
    CirculatorLean: 'Fan (Leaning)',
    CirculatorLeanForHeroArea010: 'Fan (Leaning)',
    CirculatorLeanForWorkingOnlyDay: 'Fan (Leaning) (Day)',
    CirculatorLeanPurple: 'Fan (Lean) (Purple)',
    CirculatorPurple: 'Fan (Purple)',
    CirculatorRed: 'Fan (Red)',
    ColdBox: 'Ice Box',
    Conveyor265uu: 'Conveyor Belt',
    ConveyorNav: 'ConveyorNav',
    ConveyorParts00: 'ConveyorParts00',
    CrackPlanter: 'Cracked Planter',
    CrackPlanterDouble: 'Cracked Planter (x2)',
    CrackPotL: 'Pot (L)',
    CrackPotLAnother: 'Pot 2 (L)',
    CrackPotS: 'Pot (S)',
    CrackPotSAnother: 'Pot 2 (S)',
    CrushJelly_L: 'Hydro Jelly (L)',
    CrushJelly_M: 'Hydro Jelly (M)',
    CrushJelly_S: 'Hydro Jelly (S)',
    CushionA: "Cushion (A)",
    CushionB: "Cushion (B)",
    CushionC: "Cushion (C)",
    CushionD: "Cushion (D)",
    ExcavationL: 'Excavation (L)',
    ExcavationM: 'Excavation (M)',
    ExcavationOnyon: 'Excavation (Tutorial Onion)',
    ExcavationPanmodokiSoilS: 'Excavation (Breadbug)',
    ExcavationPanmodokiSoilSM: 'Excavation (Breadbug)',
    ExcavationS: 'Excavation (S)',
    ExcavationUnder: 'ExcavationUnder',
    Fence: 'Fence',
    FenceFall: 'Iron Fence?',
    FenceFallNoSideColNoSE: 'Iron Fence (???)',
    FenceNoSideCol: 'Iron Fence (No Side Collision?)',
    FormationAlignBox: 'FormationAlignBox',
    Geyser: 'Air Geyser',
    HIddenBox_Amamo: 'HIddenBox_Amamo',
    HIddenBox_Heuchera01: 'HIddenBox_Heuchera01',
    HIddenBox_Heuchera02: 'HIddenBox_Heuchera01',
    HappyDoor: 'Oatchi Tunnel',
    HiddenBoxRoom: 'HiddenBoxRoom',
    HiddenBoxRoomDark: 'HiddenBoxRoomDark',
    Konro: 'Stove?',
    MarigumoNet_Low: 'Arachnode (+Low net?)',
    Mizunuki: 'Drain',
    MizunukiAnother: 'Drain 2',
    MizunukiIndoor: 'Drain (Cave)',
    MizunukiIndoorAnother: 'Drain 2 (Cave)',
    MoveFloor: 'Platform',
    MoveFloorHappy: 'Oatchi Platform?',
    MoveFloorHover: 'Platform (Floating)',
    MoveFloorRound: 'Platform (Round)',
    MoveFloorSlowTrigger: "MoveFloor Trigger",
    NarrowSpaceBox: 'NarrowSpaceBox',
    NarrowSpaceBoxLinkObj: 'NarrowSpaceBoxLinkObj',
    NarrowSpaceBoxSplineCamera: 'NarrowSpaceBoxSplineCamera',
    NavMeshTrigger: 'NavMeshTrigger',
    NavMeshTriggerClear: 'NavMeshTriggerClear',
    NavMeshTriggerLinkForSplash: 'NavMesh Sprinkler Trigger',
    Neji: 'Screw',
    NoraSpawnerHeadLock: 'Pikmin Spawn',
    NoraSpawnerPikminLock: 'Pikmin Spawn',
    NoraSpawnerPongashiLock: 'Candypop Bud',
    NoraSpawnerPrologue: 'Pikmin Spawn (Prologue)',
    OoAshibaKinoko: 'Chargeshroom',
    OoAshibaKinokoNarrow: 'Chargeshroom (Narrow)',
    PressFloor: 'PressFloor',
    SwampBox: 'SwampBox',
    SwampBoxDark: 'SwampBoxDark',
    SwitchOff: 'Switch (Off Only)',
    SwitchOnOff: 'Switch',
    SwitchOnOffGreen: 'Switch (Green)',
    SwitchOnOffRed: 'Switch (Red)',
    Tateana: 'Hole',
    TateanaBaby: 'Hole (Small)',
    Trampoline: 'Trampoline',
    TrampolineOneWay: 'Trampoline (One Way)',
    TrampolineWideAngle: 'Trampoline (Wide)',
    TriggerColdOFF: 'TriggerColdOFF',
    TriggerDoor: 'Trigger Gate',
    TriggerDoorSwitchBlue: 'Trigger Gate (Blue)',
    TriggerDoorSwitchOff: 'Trigger Gate (Off?)',
    TriggerDoorSwitchRed: 'Trigger Gate (Red)',
    VehicleBox: 'VehicleBox',
    VehicleBoxBungee: 'VehicleBoxBungee',
    VehicleBoxDanger: 'VehicleBoxDanger',
    WallFlexible: 'Climbable Wall',
    WarpTrigger: 'WarpTrigger',
    WarpTriggerLinkObj: 'WarpTriggerLinkObj',
    WaterBox: 'WaterBox',
    WaterBoxCircle: 'WaterBoxCircle',
    WaterBoxDeep: 'WaterBoxDeep',
    WaterBoxFluctuation: 'WaterBoxFluctuation',
    WaterBoxFluctuationDeep: 'WaterBoxFluctuationDeep',
    WaterBoxNav: 'WaterBoxNav',
    WaterBoxReduction: 'WaterBoxReduction',
    WaterBoxVS: 'WaterBoxVS',
    ZiplineAnother: 'Zipline 2',
    ZiplineSplineMesh: 'Zipline Spline Mesh'
};

export const HazardNames = {
    Charcoal: "Firey Thing on Top of FireFloor",
    FireFloor175uu: "Fire Floor (175uu)",
    FireFloor350uu: "Fire Floor (350uu)",
    FireFloor525uu: "Fire Floor (525uu)",
    Hiba: "Fire Geyser",
    HibaBubble: "Bubble Geyser",
    HibaDenki: "Electric Arial(?)",
    HibaIce: "Ice Geyser",
    HibaPoison: "Poison Geyser",
    HibaWater: "Water Geyser",
    Komush: "Kingcap",
    KomushS: "Kingcap (S)",
    KomushL: "Kingcap (L)",
    Konro: "Stove?",
    Mush: "Spotcap",
    MushS: "Spotcap (S)",
    MushL: "Spotcap (L)",
    PoisonKomush: "Poison Kingcap",
    PoisonKomushS: "Poison Kingcap (S)",
    PoisonKomushL: "Poison Kingcap (L)",
    PoisonMush: "Poison Spotcap",
    PoisonMushS: "Poison Spotcap (S)",
    StickyFloor: "Sticky Floor",
    StickyFloor175uu: "Sticky Floor (175uu)",
    StickyFloor525uu: "Sticky Floor (525uu)",
    StickyFloorFew: "Sticky Floor (Small?)",
    StickyFloorPoison: "Poison Sticky Floor",
    StickyFloorPoisonFew: "Poison Sticky Floor (Small?)",
    StickyMush: "Sticky Spotcap?",
    StickyMushB: "Sticky Spotcap (B)?",
    StickyMushC: "Sticky Spotcap (C)?",
    StickyMushPoison: "Poison Sticky Spotcap?"
};

export const OnionNames = {
    Onyon: "Onion",
    OnyonCarryBlue: "Blue Onion",
    OnyonCarryBoost: "Flarlic",
    OnyonCarryIce: "Ice Onion",
    OnyonCarryPink: "Wing Onion",
    OnyonCarryPurple: "Purple Onion",
    OnyonCarryRed: "Red Onion",
    OnyonCarryStone: "Rock Onion",
    OnyonCarryWhite: "White Onion",
    OnyonCarryYellow: "Yellow Onion",
    OnyonBootUpRed: "Area 500 Red Onion"
};

//#region Object Names
export const ObjectNames = {
    AddLand01_Area001_M: "AddLand01_Area001_M",
    AddLand02_Area001_M: "AddLand02_Area001_M",
    AddLand03_Area001_M: "AddLand03_Area001_M",
    AddLand04_Area001_M: "AddLand04_Area001_M",
    AddLand01_Area002_M: "AddLand01_Area002_M",
    AddLand02_Area002_M: "AddLand02_Area002_M",
    AddLand01_Area003_L01: "AddLand01_Area003_L01",
    AddLand02_Area003_L: "AddLand02_Area003_L",
    BurrowDemejako: "Bug-Eyed Crawmad Burrow",
    BurrowDemejakoClose: "Bug-Eyed Crawmad Burrow",
    CapturePoint: "CapturePoint",
    CaptureThrowPoint: "CaptureThrowPoint",
    OjamaBlockAir: "OjamaBlock (Air)",
    OjamaBlock: "Square Brick",
    OjamaBlockRoom: "Book",
    OjamaBlockRoom02: "Red Book",
    OjamaBlockRoomDuo: "2 Books",
    OjamaBlockWoodParts: "OjamaBlock (?)",
    OjamaBlockWoodPartsB: "OjamaBlock (?)",
    AirWallBox: "AirWallBox",
    AirWallFlick: "AirWallFlick",
    AirWallJump: "AirWallJump",
    Burrow: "Burrow",
    DemoWarpPoint: "DemoWarpPoint",
    DolphinArea500Before: "Dolphin (Area500 Before OST)",
    DolphinArea500After: "Dolphin (Area500 After OST)",
    FuurosouA: "Plants",
    FuurosouB: "Plants",
    PelplantTable: "Pellet Posy Platform",
    BikkuriKinokoPlant: "Startle Spore Plant",
    Happy: "Oatchi",
    HappyPointActorPullNekkoTutorial: "HappyPointActorPullNekkoTutorial",
    Hikarikinoko: "Common Glowcap",
    Icicle: "Icicle",
    IcicleClose: "Icicle (Close)",
    IcicleUp: "Icicle (Up)",
    IwakkoCrystal: "Breakable Crystal",
    JumpPoint_LivingRoom: "JumpPoint_LivingRoom",
    JumpPoint_Kitchen: "JumpPoint_Kitchen",
    Lucky: "Moss",
    MultiBlockArea006_BossStone: "MultiBlockArea006_BossStone",
    MultiBlockArea500_01A: "MultiBlockArea500_01A",
    MultiBlockArea500_01B: "MultiBlockArea500_01B",
    MultiBlockArea500_02A: "MultiBlockArea500_02A",
    MultiBlockArea500_02B: "MultiBlockArea500_02B",
    MultiBlockArea500_03A: "MultiBlockArea500_03A",
    MultiBlockArea500_03B: "MultiBlockArea500_03B",
    MultiBlockArea500_Cave: "MultiBlockArea500_Cave",
    NavModifierVolumeForSwampBox: 'NavModifierVolumeForSwampBox',
    Ooinu: "Daisy Plant?",
    PerchTakeOff: "PerchTakeOff",
    Perch: "Perch",
    Pellet1: "1 Pellet",
    Pellet5: "5 Pellet",
    Pellet10: "10 Pellet",
    Pelplant1: "1 Pellet Posy",
    Pelplant1Revive: "1 Pellet Posy (Reviving)",
    Pelplant1ReviveForHero: "1 Pellet Posy (Reviving) (Hero)",
    Pelplant5: "5 Pellet Posy",
    Pelplant5Revive: "5 Pellet Posy (Reviving)",
    Pelplant5ReviveForHero: "5 Pellet Posy (Reviving) (Hero)",
    Pelplant10: "10 Pellet Posy",
    Pelplant10ReviveForHero: "10 Pellet Posy (Reviving) (Hero)",
    Pod: "Pod",
    RestPoint_LivingRoom: "RestPoint_LivingRoom",
    RestPoint_Kitchen: "RestPoint_Kitchen",
    SpaceBus: "Space Bus",
    SurvivorA: "Survivor (A)",
    SurvivorKoppai: "Koppai Survivor",
    SurvivorLeaf: "Leafling Survivor",
    SurvivorLouie: "Louie",
    TargetPoint_LivingRoom: "RestPoint_LivingRoom",
    TargetPoint_Kitchen: "TargetPoint_Kitchen",
    Tsuyukusa: "Burgeoning Spiderwort",
    SurvivorOlimarLeaf: "Olimar Leafling",
    HikariStation: "Glow Pellets",
    Wasurenagusa: "Lumiknoll",
    WasurenagusaMini: "Tricknoll",
    None: "None" // TateanaBaby in night maps can drop "None" as the asset name which has to be handed specially
};

export const PortalNames = {
    DownPortal: "Cave Subfloor Entrance",
    DungeonExit: "Cave Exit",
    ExtraCavePortal: "Sage Leaf Map Portal (??)",
    MadoriArena: "Dandori Battle",
    MadoriPoko: "Dandori Challenge",
    MadoriRuins: "Cave Entrance",
    MadoriRuinsForExit: "Overworld Cave Exit",
    ZukanPortalBase: "Daytime Exploration",
    OtakaraZukanPortal: "Treasure Trove Portal",
    GenseiZukanPortal: "Piklopedia Portal",
    CharacterEditPortal: "Character Edit"
};

//#region WorkObject Names
export const WorkObjectNames = {
    BridgeFlexible: "Bridge",
    BridgeFlexibleCave: "Bridge (Cave)",
    BridgeStation: "Raw Material Pile",
    Burning: "Straw",
    DownWall: "Paper Bag",
    DownWallSidecut: "Paper Bag (Sidecut?)",
    GateRock175uu: "Rock Gate (175uu)",
    GateRock200uu: "Rock Gate (200uu)",
    GateRock275uu: "Rock Gate (275uu)",
    GateRock325uu: "Rock Gate (325uu)",
    HandleBoard: "Hanging Clipboard Handle",
    HandleBoardYellow: "Hanging Clipboard Handle (Yellow)",
    HikariStation: "Glow Pellets",
    InvisibleWallForWarpCarry: "InvisibleWallForWarpCarry",
    KinkaiPick: "Gold Nugget",
    KinkaiStation: "Gold Nugget Pile",
    PiecePick: "Raw Material",
    PullNekko: "Pullable Plant",
    PullNekkoTutorial: "Pullable Plant",
    RopeBranch: "Hanging String (M)",
    RopeBranchBig: "Hanging String (L)",
    RopeBranchSmall: "Hanging String (S)",
    RopeFishing: "Pullable Rope?",
    SlopeBoth50uu: "Slope (50uu)",
    SlopeBothSidecut50uu: "Slope (Sidecut 50uu)",
    SlopeBothSidecut80uu: "Slope (Sidecut 80uu)",
    Sprinkler: "Sprinkler",
    String: "Climbable String",
    TanebiStation: "Fire Stand (Lit)",
    TanebiStationRelay: "Fire Stand (Unlit)",
    Tunnel: "Tunnel",
    WarpCarryFloor: "Floor Tunnel",
    WarpCarryFloorCave: "Floor tunnel cave?",
    WarpCarryWall: "Wall Tunnel",
    WarpCarryWallCave: "Wall tunnel cave?",
    ValveOnce: "Valve (One Time)",
    ValveVariable: "Valve (Multi)",
    VarGateBomb: "Bomb Gate",
    VarGateDenki: "Electric Gate",
    VarGateDenkiNoPillar: "Electric Gate (No Pillar)",
    VarGateIce: "Ice Gate",
    VarGateIceNoPillar: "Ice Gate (No Pillar)",
    VarGateSoft: "Regular Gate",
    VarGateSoftNoPillar: "Regular Gate (No Pillar)",
    VarGateSoftHalf: 'VarGateSoftHalf',
    WallFlexible: "Climbable Wall",
    WallFlexibleCave: "Climbable Wall (Cave)",
    XBox: "Cardboard Box (X)",
    XBoxCan: "Cardboard Box (??)",
    YBox: "Cardboard Box (Y)",
    YBoxAnother: "Cardboard Box 2 (Y)",
    YBoxCube: "Cardboard Box Cube (Y)",
    YBoxCubeCan: "Cardboard Box Cube Can (Y)",
    YBoxSmall: "Cardboard Box Small (Y)",
    YBoxSmallAnother: "Cardboard Box Small 2 (Y)",
};

export const PikminNames = {
    PikminYellow: "Yellow Pikmin",
    PikminRed: "Red Pikmin",
    PikminBlue: "Blue Pikmin",
    PikminRock: "Rock Pikmin",
    PikminIce: "Ice Pikmin",
    PikminWing: "Wing Pikmin",
    PikminWhite: "White Pikmin",
    PikminPurple: "Purple Pikmin",
    PikminPhoton: "Glow Pikmin"
};

export const EntityNames = {
    ...CreatureNames,
    ...TreasureNames,
    ...GimmickNames,
    ...ItemNames,
    ...HazardNames,
    ...WorkObjectNames,
    ...OnionNames,
    ...BaseNames,
    ...ObjectNames,
    ...PortalNames
};

export const NameMap = {
    [InfoType.Creature]: CreatureNames,
    [InfoType.Gimmick]: GimmickNames,
    [InfoType.Object]: ObjectNames,
    [InfoType.WorkObject]: WorkObjectNames,
    [InfoType.Pikmin]: PikminNames,
    [InfoType.Base]: BaseNames,
    [InfoType.Onion]: OnionNames,
    [InfoType.Hazard]: HazardNames,
    [InfoType.Portal]: PortalNames,
    [InfoType.Item]: ItemNames,
    [InfoType.Treasure]: TreasureNames,
};

//#region Icon Overrides
export const iconOverrides = {
    bossinu: "bossinu2",
    circulatorlean: "circulator",
    circulatorleanforheroarea010: "circulator",
    circulatorleanforworkingonlyday: "circulator",
    circulatorleanpurple: "circulator",
    circulatorpurple: "circulator",
    circulatorred: "circulator",
    crackpotl: "crackpot",
    crackpotlanother: "crackpot",
    crackpots: "crackpot",
    crackpotsanother: "crackpot",
    crushjelly_l: "crushjelly",
    crushjelly_m: "crushjelly",
    crushjelly_s: "crushjelly",
    mizunukiindoor: "mizunuki",
    mizunukianother: "mizunuki",
    mizunukiindooranother: "mizunuki",
    movefloorhover: "movefloor",
    movefloorhappy: "movefloor",
    triggerdoorswitchblue: "triggerdoor",
    triggerdoorswitchoff: "triggerdoor",
    triggerdoorswitchred: "triggerdoor",
    gaterock175uu: "gaterock",
    gaterock200uu: "gaterock",
    gaterock275uu: "gaterock",
    gaterock325uu: "gaterock",
    komushl: "komush",
    komushs: "komush",
    mushl: "mush",
    mushs: "mush",
    poisonkomushl: "poisonkomush",
    poisonkomushs: "poisonkomush",
    poisonmushs: "poisonmush",
    stickyfloor175uu: "stickyfloor",
    stickyfloor525uu: "stickyfloor",
    stickyfloorfew: "stickyfloor",
    stickyfloorpartsotas: "stickyfloor",
    stickyfloorpartsmadori: "stickyfloor",
    stickyfloorpartsotab: "stickyfloor",
    stickyfloorpoison175uu: "stickyfloorpoison",
    stickyfloorpoisonfew: "stickyfloorpoison",
    stickymushb: "stickymush",
    stickymushc: "stickymush",
    ojamablockroom: "default",
    bikkurigikiplant: "bikkurikinokoplant",
    onyoncamp01: "onyoncamp",
    onyoncamp02: "onyoncamp",
    onyoncamp03: "onyoncamp",
    onyoncamp04: "onyoncamp",
    onyoncampsimple: "onyoncamp",
    onyoncampdummy: "onyoncamp",
    podcamp: "podcamp",
    podcamp01: "podcamp",
    podcamp02: "podcamp",
    podcamp03: "podcamp",
    podcamp04: "podcamp",
    podcampsimple: "podcamp",
    podcampdummy: "podcamp",
    podcampcave00: "podcamp",
    podcampcave01: "podcamp",
    podcampcave02: "podcamp",
    podcampcave03: "podcamp",
    ojamablockair: "default",
    ojamablock: "default",
    ojamablockroom: "default",
    ojamablockroom02: "default",
    ojamablockroomduo: "default",
    ojamablockwoodparts: "default",
    ojamablockwoodpartsb: "default",
    movefloorslowtrigger: "default",
    excavationl: "default",
    excavations: "default",
    excavationonyon: "default",
    excavationunders: "default",
    excavationm: "default",
    airwallbox: "default",
    airwallflick: "default",
    marigumonet: "default",
    pod: "default",
    airwalljump: "default",
    bookendslope: "default",
    bookendplane: "default",
    cushiona: "default",
    cushionb: "default",
    cushionc: "default",
    cushiond: "default",
    pelplanttable: "default",
    warptrigger: "default",
    burrow: "default",
    ropebranch: "ropefishing",
    ropebranchbig: "ropefishing",
    ropebranchsmall: "ropefishing",
    navmeshtrigger: "default",
    navmeshtriggerlinkforsplash: "default",
    navmeshtriggerclear: "default",
    none: "default",
    pelplant1revive: "pelplant1",
    pelplant1ddb: "pelplant1",
    pelplant1reviveforhero: "pelplant1",
    pelplant5revive: "pelplant5",
    pelplant5ddb: "pelplant5",
    pelplant5reviveforhero: "pelplant5",
    pelplant10ddb: "pelplant10",
    pelplant10revive: "pelplant10",
    pelplant10reviveforhero: "pelplant10",
    pullnekkotutorial: "pullnekko",
    multiblockarea006_bossstone: "default",
    multiblockarea500_01a: "default",
    multiblockarea500_01b: "default",
    multiblockarea500_02a: "default",
    multiblockarea500_02b: "default",
    multiblockarea500_03a: "default",
    multiblockarea500_03b: "default",
    multiblockarea500_cave: "default",
    onyonbootupred: "onyoncarryred",
    happypointactorpullnekkotutorial: "pullnekko",
    dolphinarea500before: "dolphinarea500",
    dolphinarea500after: "dolphinarea500",
    kinkaipick: "kinkaistation",
    panmodokihidearea: 'default',
    ojamablockroom: 'book',
    ojamablockroom02: 'book',
    ojamablockroomduo: 'book',
    ojamablock: 'brick',
    waterbox: 'waterbox',
    waterboxcircle: 'waterbox',
    waterboxdeep: 'waterbox',
    waterboxfluctuation: 'waterbox',
    waterboxfluctuationdeep: 'waterbox',
    waterboxnav: 'waterbox',
    waterboxreduction: 'waterbox',
    waterboxvs: 'waterbox',
    swampbox: 'waterbox',
    swampboxdark: 'waterbox',
    warpcarryfloor: 'tunnel',
    warpcarryfloorcave: 'tunnel',
    warpcarrywallcave: 'tunnel',
    warpcarrywall: 'tunnel',
    splinefutakuchirock: 'spline',
    splinekumachappy: 'spline',
    splinepatroller: 'spline',
    splinehagedamagumo: 'spline',
    splinedamagumocanstep: 'spline',
    splinechaser_kitchen: 'spline',
    splinechaser_livingroom: 'spline',
    splinebaby: 'spline',
    splineamebozu: 'spline',
    splinenightkochappy: 'spline',
    splinedokunameko: 'spline',
    splinefutakuchiadultrock: 'spline',
    splinepanmodoki: 'spline',
    splinebigujinko: 'spline',
    splinedodoro: 'spline',
    hiddenbox_heuchera01: "default",
    hiddenbox_heuchera02: "default",
    narrowspaceboxlinkobj: "default",
    vehiclebox: "default",
    narrowspacebox: "default",
    perchtakeoff: "default",
    perch: "default",
    addland02_area001_m: 'default',
    addland01_area002_m: 'default',
    addland03_area001_m: 'default',
    addland04_area001_m: 'default',
    addland02_area002_m: 'default',
    marigumonet_low: 'default',
    navmodifiervolumeforswampbox: 'default',
    warptriggerlinkobj: 'default',
    excavationunder: 'default',
    vargatesofthalf: 'vargatesoftnopillar',
    hiddenbox_amamo: 'default',
    addland01_area003_l01: 'default',
    addland02_area003_l: 'default',
    burrowdemejako: 'default',
    hiddenboxroomdark: 'default',
    hiddenboxroom: 'default',
    capturepoint: 'default',
    capturethrowpoint: 'default',
    jumppoint_livingroom: 'default',
    jumppoint_kitchen: 'default',
    restpoint_livingroom: 'default',
    restpoint_kitchen: 'default',
    targetpoint_livingroom: 'default',
    targetpoint_kitchen: 'default',
    demowarppoint: 'default',
    bank: 'default',
    airwallterrain: 'default',
    vehicleboxbungee: 'default',
    invisiblewallforwarpcarry: 'default',
    narrowspaceboxsplinecamera: 'default',
    excavationonyontutorial: 'default',
    pullnekkotutorial: 'pullnekko',
    happypointactorpullnekkotutorial: 'default',
    conveyornav: 'default',
    vehicleboxdanger: 'default',
    formationalignbox: 'default',
    honeylevelplacement: 'honey',
    pressfloor: 'default',
    triggercoldoff: 'default',
    fuurosoub: 'fuurosou',
    fuurosoua: 'fuurosou',
    excavationpanmodokisoils: 'default',
    excavationpanmodokisoilm: 'default',
    panmodokihidearea: 'default',
    addland01_area001_m: 'default',
    addlLand02_area002_m: 'default',
    conveyorparts00: 'default',
    burrowdemejakoclose: 'default',
    xboxcan: 'xbox',
    sensorbomb: 'searchbomb',
    shugoflagred: 'shugoflag',
    dashboots1: 'dashboots',
    nukifue: 'hikkonukifue',
    shugoexflag: 'shugoflag',
    // none: "default"
};

// A 207 byte slice from an AreaBaseCamp_GEN_VARIABLE
// Sometimes they"re missing 4 bytes in the middle that are always 0 anyway
// A scrape indicated most seem not to have them, but a notable amount do. No clue on what they do.
export const areaBaseGenVarBytes = [0, 0, 0, 0, 255, 255, 255, 255, 5, 0, 0, 0, 78, 111, 110, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 66, 0, 128, 187, 67, 0, 0, 0, 0, 0, 0, 112, 65, 0, 0, 240, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 78, 111, 110, 101, 0, 5, 0, 0, 0, 78, 111, 110, 101, 0, 5, 0, 0, 0, 78, 111, 110, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

export const Times = {
    DAY: "Day",
    NIGHT: "Night",
    PERM: "Permanent"
};

export const invisibleEntities = [
    "OjamaBlockAir",
    "NavMeshTrigger",
    "ConveyorNav",
    "AirWall",
    "WarpTrigger",
    "Excavation",
    "AddLand",
    "Vehicle",
    "NarrowSpace",
    "HiddenBox",
    "HIddenBox",
    "Point_",
    "InvisibleWall",
    "Formation",
    "ConveyorParts",
    "NavModifier",
];

// Strange entities 
export const weirdAIEntities = [
    'BurrowDemejako',
    'BurrowDemejakoClose',
    'Perch',
    'MarigumoNet',
    'Burrow',
    'CaptureThrowPoint',
    'MiniMochi',
    'PanModokiHideArea',
    'CaptureThrowPoint',
    'CapturePoint',
    'RestPoint_LivingRoom',
    'RestPoint_Kitchen',
    'JumpPoint_LivingRoom',
    'JumpPoint_Kitchen',
    'TargetPoint_Kitchen',
    'TargetPoint_LivingRoom',
    'DemoWarpPoint',
    'PerchTakeOff'
];

export const DandoriChallengeMaps = [
    "Cave003_F00",
    "Cave008_F00",
    "Cave015_F00",
    "Cave017_F00",
    "Cave020_F00",
    "Cave027_F00",
    "Cave028_F00",
    "Cave029_F00",
    "Cave030_F00",
    "Cave031_F00",
    "Cave032_F00",
    "Cave034_F00",
    "CaveESP000_Title"
];

// ToLevelName
export const PortalDestinations = [
    'Area001', 'Area002', 'Area003', 'Area004', 'Area006',
    'Area010', 'Area500', 'Cave001_F00', 'Cave002_F00', 'Cave002_F01',
    'Cave004_F00', 'Cave004_F01', 'Cave005_F00', 'Cave005_F01', 'Cave006_F00',
    'Cave006_F01', 'Cave006_F02', 'Cave006_F03', 'Cave007_F00', 'Cave007_F01',
    'Cave007_F02', 'Cave007_F03', 'Cave009_F00', 'Cave010_F00', 'Cave010_F01',
    'Cave010_F02', 'Cave010_F03', 'Cave010_F04', 'Cave010_F05', 'Cave011_F00',
    'Cave011_F01', 'Cave011_F02', 'Cave011_F03', 'Cave012_F00', 'Cave012_F01',
    'Cave012_F02', 'Cave013_F00', 'Cave013_F01', 'Cave013_F02', 'Cave013_F04',
    'Cave014_F00', 'Cave014_F01', 'Cave014_F02', 'Cave014_F03', 'Cave014_F04', ,
    'Cave018_F00', 'Cave018_F01', 'Cave018_F02', 'Cave019_F00', 'Cave019_F01',
    'Cave019_F02', 'Cave019_F03', 'Cave019_F04', 'Cave021_F00', 'Cave021_F01',
    'Cave021_F02', 'Cave021_F03', 'Cave022_F00', 'Cave022_F01', 'Cave022_F02',
    'Cave022_F03', 'Cave023_F00', 'Cave023_F01', 'Cave023_F02', 'Cave023_F03',
    'Cave023_F04', 'Cave024_F00', 'Cave024_F01', 'Cave024_F02', 'Cave024_F03',
    'Cave024_F04', 'Cave025_F00', 'Cave026_F00', 'Cave026_F01', 'Cave026_F02',
    'Cave033_F00', 'Cave033_F01'
];

export const StartingLevels = [
    "Cave001_F00",
    "Cave002_F00",
    "Cave004_F00",
    "Cave005_F00",
    "Cave006_F00",
    "Cave007_F00",
    "Cave009_F00",
    "Cave010_F00",
    "Cave011_F00",
    "Cave012_F00",
    "Cave013_F00",
    "Cave014_F00",
    "Cave018_F00",
    "Cave019_F00",
    "Cave021_F00",
    "Cave022_F00",
    "Cave023_F00",
    "Cave024_F00",
    "Cave025_F00",
    "Cave026_F00"
];

export const FinalFloors = [
    "Cave001_F00",
    "Cave002_F01",
    "Cave004_F01",
    "Cave005_F01",
    "Cave006_F03",
    "Cave007_F03",
    "Cave009_F00",
    "Cave010_F05",
    "Cave011_F03",
    "Cave012_F02",
    "Cave013_F04",
    "Cave014_F04",
    "Cave016_F18",
    "Cave018_F02",
    "Cave019_F04",
    "Cave021_F03",
    "Cave022_F03",
    "Cave023_F04",
    "Cave024_F04",
    "Cave025_F00",
    "Cave026_F02"
];

export const OverworldPortals = [
    { toLevelName: 'Area001', portalNumber: 10 },
    { toLevelName: 'Area001', portalNumber: 21 },
    { toLevelName: 'Area001', portalNumber: 4 },
    { toLevelName: 'Area001', portalNumber: 9 },
    { toLevelName: 'Area001', portalNumber: 2 },
    { toLevelName: 'Area001', portalNumber: 7 },
    { toLevelName: 'Area002', portalNumber: 50 },
    { toLevelName: 'Area002', portalNumber: 58 },
    { toLevelName: 'Area002', portalNumber: 51 },
    { toLevelName: 'Area002', portalNumber: 54 },
    { toLevelName: 'Area003', portalNumber: 51 },
    { toLevelName: 'Area003', portalNumber: 53 },
    { toLevelName: 'Area003', portalNumber: 52 },
    { toLevelName: 'Area003', portalNumber: 55 },
    { toLevelName: 'Area003', portalNumber: 50 },
    { toLevelName: 'Area004', portalNumber: 51 },
    { toLevelName: 'Area004', portalNumber: 54 },
    { toLevelName: 'Area004', portalNumber: 51 },
    { toLevelName: 'Area006', portalNumber: 50 },
    { toLevelName: 'Area006', portalNumber: 53 },
    { toLevelName: 'Area006', portalNumber: 52 },
    { toLevelName: 'Area0010', portalNumber: 50 },
    { toLevelName: 'Area0010', portalNumber: 53 },
    { toLevelName: 'Area0010', portalNumber: 56 },
    { toLevelName: 'Area0010', portalNumber: 51 },
];

export const onionWeights = {
    OnyonCarryBlue: 20,
    OnyonCarryIce: 30,
    OnyonCarryPink: 10,
    OnyonCarryPurple: 10,
    OnyonCarryRed: 10,
    OnyonCarryStone: 30,
    OnyonCarryWhite: 10,
    OnyonCarryYellow: 20,
};

export const Messages = {
    PROGRESS: 'progressNotify',
    ERROR: 'errorNotify',
    SUCCESS: 'successNotify',
    NONBLOCKING: 'nonBlockingNotify'
};

export const ObjectAI_STRING_INDEX = 115; // Index without offset where the 3 strings start in short generator
export const ObjectAI_END_INDEX = 155; // Index without offset where the AI_GEN_VAR starts if all 3 ID strings are None

export const nonRepeatingSplines = [
    "SplineFutakuchiRock",
    "SplineFutakuchiAdultRock",
    "SplineHageDamagumo",
    "SplineDamagumoCanStep",
    "SplineDodoro",
    "ZiplineSplineMesh",
    "ZiplineAnother"
];

// I think the way enums are used here is stupid
export const NpcBodyType = {
    Alph: "ENpcBodyType::Alph",
    Brittany: "ENpcBodyType::Brittany",
    Captain: "ENpcBodyType::Captain",
    Charlie: "ENpcBodyType::Charlie",
    CraftShop: "ENpcBodyType::CraftShop",
    Doctor: "ENpcBodyType::Doctor",
    Egg: "ENpcBodyType::Egg",
    LeafHermit: "ENpcBodyType::LeafHermit",
    Louie: "ENpcBodyType::Louie",
    Operator: "ENpcBodyType::Operator",
    Olimar: "ENpcBodyType::Olimar",
    Pear: "ENpcBodyType::Pear",
    Pilot: "ENpcBodyType::Pilot",
    Ranger: "ENpcBodyType::Ranger",
    Round: "ENpcBodyType::Round",
    Square: "ENpcBodyType::Square",
};

export const NpcHairType = {
    HairType_00: "ENpcHairType::HairType_00",
    HairType_01: "ENpcHairType::HairType_01",
    HairType_02: "ENpcHairType::HairType_02",
    HairType_03: "ENpcHairType::HairType_03",
    HairType_04: "ENpcHairType::HairType_04",
    HairType_05: "ENpcHairType::HairType_05",
};

export const NpcFaceType = {
    FaceType_00: "ENpcFaceType::FaceType_00",
    FaceType_01: "ENpcFaceType::FaceType_01",
    FaceType_02: "ENpcFaceType::FaceType_02",
    FaceType_03: "ENpcFaceType::FaceType_03",
    FaceType_04: "ENpcFaceType::FaceType_04",
    FaceType_05: "ENpcFaceType::FaceType_05",
    FaceType_06: "ENpcFaceType::FaceType_06",
    FaceType_07: "ENpcFaceType::FaceType_07",
    FaceType_08: "ENpcFaceType::FaceType_08",
    FaceType_09: "ENpcFaceType::FaceType_09",
};

export const LeafFaceId = Object.fromEntries(Object.entries(NpcFaceType).slice(0, 6));

export const NpcPlayerColorType = {
    Red: "ENpcPlayerColorType::Red",
    Green: "ENpcPlayerColorType::Green",
    Orange: "ENpcPlayerColorType::Orange",
    Purple: "ENpcPlayerColorType::Purple",
    Blue: "ENpcPlayerColorType::Blue",
    Pink: "ENpcPlayerColorType::Pink",
    LifeSupport: "ENpcPlayerColorType::LifeSupport"
};

export const NpcSkinColorType = {
    SkinColorType_00: "ENpcSkinColorType::SkinColorType_00",
    SkinColorType_01: "ENpcSkinColorType::SkinColorType_01",
    SkinColorType_02: "ENpcSkinColorType::SkinColorType_02",
    SkinColorType_03: "ENpcSkinColorType::SkinColorType_03",
    SkinColorType_04: "ENpcSkinColorType::SkinColorType_04",
    SkinColorType_05: "ENpcSkinColorType::SkinColorType_05",
    SkinColorType_06: "ENpcSkinColorType::SkinColorType_06",
    SkinColorType_07: "ENpcSkinColorType::SkinColorType_07",
};

export const CakTalkVoiceType = {
    Male1: "ECakTalkVoiceType::Male1",
    Male3: "ECakTalkVoiceType::Male3",
    Female1: "ECakTalkVoiceType::Female1",
    Female2: "ECakTalkVoiceType::Female2",
    Male2: "ECakTalkVoiceType::Male2"
};

export const CakTalkVoiceModel = {
    Captain: "ECakTalkVoiceModel::Captain",
    Doctor: "ECakTalkVoiceModel::Doctor",
    Junior: "ECakTalkVoiceModel::Junior",
    Ranger: "ECakTalkVoiceModel::Ranger",
    Leaf: "ECakTalkVoiceModel::Leaf",
    Leaf2: "ECakTalkVoiceModel::Leaf2",
    LeafHermit: "ECakTalkVoiceModel::LeafHermit",
    Louie: "ECakTalkVoiceModel::Louie",
    None: "ECakTalkVoiceModel::None",
    Olimar: "ECakTalkVoiceModel::Olimar",
    Pilot: "ECakTalkVoiceModel::Pilot",
    Scientist: "ECakTalkVoiceModel::Scientist",
    "People_Man_Low!!2": "ECakTalkVoiceModel::People_Man_Low!!2",
    "People_Man_Low!!3": "ECakTalkVoiceModel::People_Man_Low!!3",
    "People_Man_Low!!4": "ECakTalkVoiceModel::People_Man_Low!!4",
    "People_Man_Middle!!2": "ECakTalkVoiceModel::People_Man_Middle!!2",
    "People_Man_Middle!!3": "ECakTalkVoiceModel::People_Man_Middle!!3",
    "People_Man_Middle!!4": "ECakTalkVoiceModel::People_Man_Middle!!4",
    "People_Man_High!!2": "ECakTalkVoiceModel::People_Man_High!!2",
    "People_Man_High!!3": "ECakTalkVoiceModel::People_Man_High!!3",
    "People_Woman_Low!!2": "ECakTalkVoiceModel::People_Woman_Low!!2",
    "People_Woman_Low!!4": "ECakTalkVoiceModel::People_Woman_Low!!4",
    "People_Woman_Midle!!2": "ECakTalkVoiceModel::People_Woman_Middle!!2",
    "People_Woman_High!!3": "ECakTalkVoiceModel::People_Woman_High!!3",
    "People_Woman_High!!2": "ECakTalkVoiceModel::People_Woman_High!!2",
};

export const DemoBindName = [
    "0",
    "Area500_01_Survivor",
    "Area500_02_Survivor",
    "Area500_03_Survivor",
    "Area500_04_Survivor",
    "Area500_05_Survivor",
    "Area500_06_Survivor",
    "Area500_07_Survivor",
    "Area500_08_Survivor",
    "Area500_09_Survivor",
    "Area500_10_Survivor",
    "Area500_11_Survivor",
    "Area500_12_Survivor",
    "Area500_13_Survivor",
    "Area500_14_Survivor",
    "Area500_15_Survivor",
    "Area500_16_Survivor",
    "Area500_17_Survivor",
    "Area500_18_Survivor",
    "Area500_19_Survivor",
    "Area500_20_Survivor",
    "Area500_21_Survivor",
    "Area500_22_Survivor",
    "Area500_23_Survivor",
    "Area500_24_Survivor",
    "Area500_25_Survivor",
    "Area500_26_Survivor",
    "Area500_27_Survivor",
    "Area500_28_Survivor",
    "Area500_01_Leaf",
    "Area500_02_Leaf",
    "Area500_03_Leaf",
    "Area500_04_Leaf",
    "Area500_05_Leaf",
    "Area500_06_Leaf",
    "Area500_07_Leaf",
    "Area500_08_Leaf",
    "Area500_09_Leaf",
    "Area500_10_Leaf",
    "Area500_11_Leaf",
    "Area500_12_Leaf",
    "Area500_13_Leaf",
    "Area500_14_Leaf",
    "Area500_15_Leaf",
    "Area500_16_Leaf",
    "Area500_17_Leaf",
    "Area500_18_Leaf",
    "Area500_19_Leaf",
    "Area500_20_Leaf",
    "Area500_Olimar_Leaf",
    "GNpcLouie",
    "GNpcLeaf_00"
];

export const NpcInfoKey = [
    "SV000",
    "SV001",
    "SV002",
    "SV003",
    "SV007",
    "SV008",
    "SV006",
    "SV004",
    "SV009",
    "SV005",
    "SV010",
    "SV012",
    "SV011",
    "SV014",
    "SV016",
    "SV018",
    "SV013",
    "SV017",
    "SV015",
    "SV019",
    "SV020",
    "SV021",
    "SV022",
    "SV023",
    "SV024",
    "LF000",
    "LF001",
    "LF003",
    "LF019",
    "LF004",
    "LF005",
    "LF006",
    "LF007",
    "LF008",
    "LF009",
    "LF010",
    "LF011",
    "LF012",
    "LF013",
    "LF014",
    "LF015",
    "LF016",
    "LF017",
    "LF018",
    "LF002",
    "SV026",
    "SV027",
    "SV025",
    "Olimar",
    "Louie",
    "CaptainOlimar",
    "LeafHermit"
];

export const NpcRoleType = {
    AreaMove: "ENpcRoleType::AreaMove",
    Challenge: "ENpcRoleType::Challenge",
    CraftShop: "ENpcRoleType::CraftShop",
    CreaturesPictureBook: "ENpcRoleType::CreaturesPicturebook",
    CharaEdit: "ENpcRoleType::CharaEdit",
    Doctor: "ENpcRoleType::Doctor",
    HeroStory: "ENpcRoleType::HeroStory",
    Normal: "ENpcRoleType::Normal",
    OtakaraPictureBook: "ENpcRoleType::OtakaraPicturebook",
    Pilot: "ENpcRoleType::Pilot",
    Ranger: "ENpcRoleType::Ranger",
    SkillTrainer: "ENpcRoleType::SkillTrainer",
    YYB: "ENpcRoleType::YYB",
};

export const CakTalkVoiceTone = {
    CraftShop: "ECakTalkVoiceTone::CraftShop",
    Default: "ECakTalkVoiceTone::Default",
    Doctor: "ECakTalkVoiceTone::Doctor",
    NormalA: "ECakTalkVoiceTone::NormalA",
    Ranger: "ECakTalkVoiceTone::Ranger",
};

export const NpcRoleGroupType = {
    Alone: "ENpcRoleGroupType::Alone",
    FunctionNpc: "ENpcRoleGroupType::FunctionNpc",
    Hokotate: "ENpcRoleGroupType::Hokotate",
    Koppai: "ENpcRoleGroupType::Koppai",
    None: "ENpcRoleGroupType::None",
    Rescuer: "ENpcRoleGroupType::Rescuer",
    RichMan: "ENpcRoleGroupType::RichMan",
    RrealEestateCompany: "ENpcRoleGroupType::RrealEestateCompany",
    SurveyTeam: "ENpcRoleGroupType::SurveyTeam",
    TourGeography: "ENpcRoleGroupType::TourGeography",
    TVCrew: "ENpcRoleGroupType::TVCrew",
    Tour: "ENpcRoleGroupType::Tour",
};

export const GenseiVSDifficulty = {
    Easy: "EGenseiVSDifficulty::Easy",
    Normal: "EGenseiVSDifficulty::Normal",
    Hard: "EGenseiVSDifficulty::Hard"
};

export const ItemTypeIDEditor = {
    AntiElectric: "EItemTypeIDEditor::AntiElectric",
    AntiElectricHappy: "EItemTypeIDEditor::AntiElectricHappy",
    AntiNoroNoro: "EItemTypeIDEditor::AntiNoroNoro",
    AntiWind: "EItemTypeIDEditor::AntiWind",
    Bomb: "EItemTypeIDEditor::Bomb",
    CarryArm: "EItemTypeIDEditor::CarryArm",
    DashBoots1: "EItemTypeIDEditor::DashBoots1",
    DogFood: "EItemTypeIDEditor::DogFood",
    Drone: "EItemTypeIDEditor::Drone",
    FlareGuard: "EItemTypeIDEditor::FlareGuard",
    FlareGuardHappy: "EItemTypeIDEditor::FlareGuardHappy",
    Gekikara: "EItemTypeIDEditor::Gekikara",
    HeadLamp1: "EItemTypeIDEditor::HeadLamp1",
    HeadLamp2: "EItemTypeIDEditor::HeadLamp2",
    HimajinCounter: "EItemTypeIDEditor::HimajinCounter",
    HomingBomb: "EItemTypeIDEditor::HomingBomb",
    IceBomb: "EItemTypeIDEditor::IceBomb",
    IceGuard: "EItemTypeIDEditor::IceGuard",
    IceGuardHappy: "EItemTypeIDEditor::IceGuardHappy",
    MetalSystem2: "EItemTypeIDEditor::MetalSystem2",
    MetalSystem2Happy: "EItemTypeIDEditor::MetalSystem2Happy",
    MetalSystem3: "EItemTypeIDEditor::MetalSystem3",
    MetalSystem3Happy: "EItemTypeIDEditor::MetalSystem3Happy",
    NewOtakaraSensor: "EItemTypeIDEditor::NewOtakaraSensor",
    NewOtakaraSensorPlus: "EItemTypeIDEditor::NewOtakaraSensorPlus",
    NukiFue: "EItemTypeIDEditor::NukiFue",
    PhotonBall: "EItemTypeIDEditor::PhotonBall",
    PoisonGuardHappy: "EItemTypeIDEditor::PoisonGuardHappy",
    RecoveryKit: "EItemTypeIDEditor::RecoveryKit",
    RocketPunch: "EItemTypeIDEditor::RocketPunch",
    SensorBomb: "EItemTypeIDEditor::SensorBomb",
    ShugoExFlag: "EItemTypeIDEditor::ShugoExFlag",
    ShugoFlag: "EItemTypeIDEditor::ShugoFlag",
    TairetsuFue: "EItemTypeIDEditor::TairetsuFue",
    ThunderAll: "EItemTypeIDEditor::ThunderAll",
    TotsugekiFue: "EItemTypeIDEditor::TotsugekiFue",
    VitalSystem1Happy: "EItemTypeIDEditor::VitalSystem1Happy",
    VitalSystem2: "EItemTypeIDEditor::VitalSystem2",
    VitalSystem2Happy: "EItemTypeIDEditor::VitalSystem2Happy",
    VitalSystem3: "EItemTypeIDEditor::VitalSystem3",
    VitalSystem3Happy: "EItemTypeIDEditor::VitalSystem3Happy",
    WideFue: "EItemTypeIDEditor::WideFue",
    YuudouEsa: "EItemTypeIDEditor::YuudouEsa",
    None: "EItemTypeIDEditor::None",
    MetalSystem1: "EItemTypeIDEditor::MetalSystem1",
    MetalSystem2: "EItemTypeIDEditor::MetalSystem2",
    MetalSystem3: "EItemTypeIDEditor::MetalSystem3",
    VitalSystem1: "EItemTypeIDEditor::VitalSystem1",
    VitalSystem2: "EItemTypeIDEditor::VitalSystem2",
    VitalSystem3: "EItemTypeIDEditor::VitalSystem3",
    MetalSystem1Happy: "EItemTypeIDEditor::MetalSystem1Happy",
    MetalSystem2Happy: "EItemTypeIDEditor::MetalSystem2Happy",
    MetalSystem3Happy: "EItemTypeIDEditor::MetalSystem3Happy",
    VitalSystem1Happy: "EItemTypeIDEditor::VitalSystem1Happy",
    VitalSystem2Happy: "EItemTypeIDEditor::VitalSystem2Happy",
    VitalSystem3Happy: "EItemTypeIDEditor::VitalSystem3Happy"
};